{
  "props" : {
    "children" : [ {
      "props" : {
        "layoutStyle" : {
          "display" : "none"
        },
        "name" : "eventLoop cheat",
        "style" : { },
        "text" : {
          "@class" : "Script",
          "content" : "import { triggerEventLoop } from \"./UIfacade/debugFacade\";\ntriggerEventLoop()\n\"<p>(Trigger event loop hack)</p>\"",
          "language" : "TypeScript"
        }
      },
      "type" : "Text"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "children" : [ {
              "props" : {
                "children" : [ {
                  "props" : {
                    "exposePageSizeAs" : "",
                    "initialSelectedPageId" : {
                      "@class" : "Script",
                      "content" : "Variable.find(gameModel, 'startMenuPageLoader').getValue(self);",
                      "language" : "typescript"
                    },
                    "layoutStyle" : { },
                    "name" : "startMenuPageLoader",
                    "style" : { }
                  },
                  "type" : "PageLoader"
                } ],
                "layout" : {
                  "alignContent" : "center",
                  "justifyContent" : "center"
                },
                "layoutStyle" : {
                  "height" : "100%",
                  "width" : "100%"
                },
                "style" : { }
              },
              "type" : "FlexList"
            } ]
          },
          "type" : "PlayerIf"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "Variable.find(gameModel, 'gameState').setAllowedValue(self, \"NOT_INITIATED\");",
                            "language" : "javascript"
                          }
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Reset (Status)</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "name" : "Reset status",
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "Variable.find(gameModel, 'gameState').setAllowedValue(self, \"PAUSED\");",
                            "language" : "javascript"
                          }
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Pause (Status)</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "name" : "Pause status",
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Reset (Local)</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "script" : {
                            "@class" : "ClientScript",
                            "content" : "import { recomputeLocalState } from \"./UIfacade/debugFacade\";\n\nrecomputeLocalState();",
                            "language" : "TypeScript"
                          }
                        },
                        "name" : "Reset local",
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Log State (Local)</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "script" : {
                            "@class" : "ClientScript",
                            "content" : "import { getCurrentState } from \"./UIfacade/debugFacade\";\n\nwlog(getCurrentState())",
                            "language" : "TypeScript"
                          }
                        },
                        "name" : "Log local",
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Force Run Loop</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "script" : {
                            "@class" : "ClientScript",
                            "content" : "import { triggerEventLoop } from \"./UIfacade/debugFacade\";\n\ntriggerEventLoop();",
                            "language" : "TypeScript"
                          }
                        },
                        "name" : "Force run",
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Reset tmpFeature</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "script" : {
                            "@class" : "ClientScript",
                            "content" : "import { clearTmpFeature } from \"./gameMap/main\";\n\nclearTmpFeature();",
                            "language" : "TypeScript"
                          }
                        },
                        "name" : "Reset tmp",
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Log mapState</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "script" : {
                            "@class" : "ClientScript",
                            "content" : "import { getMapState } from \"./gameMap/main\";\n\nwlog(getMapState())",
                            "language" : "TypeScript"
                          }
                        },
                        "name" : "Log mapState",
                        "style" : { }
                      },
                      "type" : "Button"
                    } ],
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "Variable.find(gameModel, '_admin_AdminMode').isFalse(self);",
                      "language" : "typescript"
                    },
                    "layout" : {
                      "flexDirection" : "row"
                    },
                    "layoutStyle" : { },
                    "name" : "[admin] header",
                    "style" : { }
                  },
                  "type" : "FlexList"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "attachToClosest" : ".game",
                            "attachedToId" : "",
                            "children" : [ {
                              "props" : {
                                "exposePageSizeAs" : "",
                                "initialSelectedPageId" : {
                                  "@class" : "Script",
                                  "content" : "Variable.find(gameModel, \"modalPageNumber\").getValue(self);",
                                  "language" : "typescript"
                                },
                                "layoutStyle" : { },
                                "name" : "popupLoader",
                                "style" : { }
                              },
                              "type" : "PageLoader"
                            } ],
                            "hideIf" : {
                              "@class" : "Script",
                              "content" : "Variable.find(gameModel, 'showMethaneModal').isFalse(self);",
                              "language" : "typescript"
                            },
                            "layout" : { },
                            "layoutStyle" : {
                              "height" : "100%",
                              "pointer-events" : "auto",
                              "width" : "100%"
                            },
                            "name" : "PageLoader",
                            "onExitActions" : {
                              "server" : {
                                "@class" : "Script",
                                "content" : "Variable.find(gameModel, 'showMethaneModal').setValue(self, false);",
                                "language" : "javascript"
                              }
                            },
                            "style" : { }
                          },
                          "type" : "Modal"
                        }, {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "className" : "panel-title",
                                "layoutStyle" : { },
                                "style" : { },
                                "text" : {
                                  "@class" : "Script",
                                  "content" : "import { getCurrentActorUid } from \"./gameInterface/main\";\nimport { getActor } from \"./UIfacade/actorFacade\";\n`<p>${getActor(getCurrentActorUid())!.Role}</p>`;",
                                  "language" : "TypeScript"
                                }
                              },
                              "type" : "Text"
                            }, {
                              "props" : {
                                "children" : [ {
                                  "props" : {
                                    "children" : [ {
                                      "props" : {
                                        "className" : "menuLeftPanel",
                                        "conditionnalClassNames" : [ {
                                          "applyOn" : "Inside",
                                          "className" : "menuLeftPanel-selected",
                                          "condition" : {
                                            "@class" : "Script",
                                            "content" : "Context.selectedPanel.state.selected === 'actions'",
                                            "language" : "typescript"
                                          }
                                        } ],
                                        "label" : {
                                          "@class" : "Script",
                                          "content" : "import { getTranslation } from \"./tools/translation\";\n`<p>${getTranslation('mainSim-interface', 'actions')}</p>`",
                                          "language" : "TypeScript"
                                        },
                                        "layoutStyle" : { },
                                        "localScriptEval" : {
                                          "script" : {
                                            "@class" : "ClientScript",
                                            "content" : " Context.selectedPanel.setState({selected: 'actions'})",
                                            "language" : "TypeScript"
                                          }
                                        },
                                        "style" : { }
                                      },
                                      "type" : "Button"
                                    }, {
                                      "props" : {
                                        "className" : "menuLeftPanel",
                                        "conditionnalClassNames" : [ {
                                          "applyOn" : "Inside",
                                          "className" : "menuLeftPanel-selected",
                                          "condition" : {
                                            "@class" : "Script",
                                            "content" : "Context.selectedPanel.state.selected === 'resources'",
                                            "language" : "typescript"
                                          }
                                        } ],
                                        "label" : {
                                          "@class" : "Script",
                                          "content" : "import { getTranslation } from \"./tools/translation\";\n`<p>${getTranslation('mainSim-interface', 'resources')}</p>`",
                                          "language" : "TypeScript"
                                        },
                                        "layoutStyle" : { },
                                        "localScriptEval" : {
                                          "script" : {
                                            "@class" : "ClientScript",
                                            "content" : " Context.selectedPanel.setState({selected: 'resources'})",
                                            "language" : "TypeScript"
                                          }
                                        },
                                        "style" : { }
                                      },
                                      "type" : "Button"
                                    } ],
                                    "layout" : {
                                      "flexDirection" : "row"
                                    },
                                    "layoutStyle" : { },
                                    "name" : "menu",
                                    "style" : { }
                                  },
                                  "type" : "FlexList"
                                }, {
                                  "props" : {
                                    "exposePageSizeAs" : "",
                                    "initialSelectedPageId" : {
                                      "@class" : "Script",
                                      "content" : "Context.selectedPanel.state.selected === 'actions' ? '45' : '46'",
                                      "language" : "typescript"
                                    },
                                    "layoutStyle" : { },
                                    "name" : "interfaceMenuLoader",
                                    "style" : { }
                                  },
                                  "type" : "PageLoader"
                                } ],
                                "exposeAs" : "selectedPanel",
                                "initialState" : {
                                  "@class" : "Script",
                                  "content" : "({selected:'actions'})",
                                  "language" : "TypeScript"
                                },
                                "layoutClassName" : "noMargin noPadding",
                                "layoutStyle" : {
                                  "flexDirection" : "column"
                                },
                                "localState" : false,
                                "style" : { }
                              },
                              "type" : "State"
                            } ],
                            "className" : "leftPanel generalPanels",
                            "layout" : {
                              "flexDirection" : "column"
                            },
                            "layoutClassName" : "leftPanel-container generalPanels-container",
                            "layoutStyle" : { },
                            "name" : "leftPanel",
                            "style" : { }
                          },
                          "type" : "FlexList"
                        }, {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "className" : "panel-title",
                                "layoutStyle" : { },
                                "name" : "RadioTitle",
                                "style" : { },
                                "text" : {
                                  "@class" : "Script",
                                  "content" : "\"<p>Radio</p>\"",
                                  "language" : "TypeScript"
                                }
                              },
                              "type" : "Text"
                            }, {
                              "props" : {
                                "children" : [ {
                                  "props" : {
                                    "children" : [ {
                                      "props" : {
                                        "children" : [ {
                                          "props" : {
                                            "children" : [ {
                                              "props" : {
                                                "className" : "sender",
                                                "layoutClassName" : "radioContent-container sender-container",
                                                "layoutStyle" : { },
                                                "name" : "Sender",
                                                "style" : { },
                                                "text" : {
                                                  "@class" : "Script",
                                                  "content" : "Context.item.emitter;",
                                                  "language" : "TypeScript"
                                                }
                                              },
                                              "type" : "Text"
                                            }, {
                                              "props" : {
                                                "className" : "message",
                                                "layoutClassName" : "radioContent-container message-container",
                                                "layoutStyle" : { },
                                                "name" : "Message",
                                                "style" : { },
                                                "text" : {
                                                  "@class" : "Script",
                                                  "content" : "Context.item.message;",
                                                  "language" : "TypeScript"
                                                }
                                              },
                                              "type" : "Text"
                                            } ],
                                            "className" : "aMessage",
                                            "computedAttributes" : [ {
                                              "attrName" : "sender-role",
                                              "attrValue" : {
                                                "@class" : "Script",
                                                "content" : "Context.item.emitter;",
                                                "language" : "TypeScript"
                                              }
                                            } ],
                                            "layout" : {
                                              "flexDirection" : "column"
                                            },
                                            "layoutClassName" : "aMessage-container sender-role",
                                            "layoutStyle" : { },
                                            "name" : "aMessage",
                                            "style" : { }
                                          },
                                          "type" : "FlexList"
                                        } ],
                                        "className" : "allDisplay-container s_margin",
                                        "exposeAs" : "item",
                                        "getItemsFn" : {
                                          "@class" : "Script",
                                          "content" : "import { getAvailableRadioMessages } from \"./UIfacade/radioFacade\";\nconst id = Variable.find(gameModel, 'currentActorUid').getValue(self);\ngetAvailableRadioMessages(id);",
                                          "language" : "TypeScript"
                                        },
                                        "itemKey" : "message",
                                        "layout" : {
                                          "flexDirection" : "column"
                                        },
                                        "layoutClassName" : "",
                                        "layoutStyle" : {
                                          "width" : "100%"
                                        },
                                        "style" : { }
                                      },
                                      "type" : "For each"
                                    } ]
                                  },
                                  "type" : "PlayerIf"
                                }, {
                                  "props" : {
                                    "children" : [ {
                                      "props" : {
                                        "layoutClassName" : "radioMessage-container",
                                        "layoutStyle" : { },
                                        "style" : {
                                          "margin" : "5px",
                                          "padding" : "5px"
                                        },
                                        "text" : {
                                          "@class" : "Script",
                                          "content" : "import { getTranslation } from \"./tools/translation\";\n`<p>${getTranslation('mainSim-interface', 'no-radio')}</p>`",
                                          "language" : "TypeScript"
                                        }
                                      },
                                      "type" : "Text"
                                    } ]
                                  },
                                  "type" : "PlayerElse"
                                } ],
                                "className" : "tomato",
                                "ifCondition" : {
                                  "@class" : "Script",
                                  "content" : "import { getAvailableRadioMessages } from \"./UIfacade/radioFacade\";\nconst id = Variable.find(gameModel, 'currentActorUid').getValue(self);\ngetAvailableRadioMessages(id).length > 0;",
                                  "language" : "typescript"
                                },
                                "layoutStyle" : {
                                  "overflow" : "none"
                                },
                                "style" : { }
                              },
                              "type" : "If Else"
                            } ],
                            "className" : "generalPanels",
                            "layout" : {
                              "flexDirection" : "column",
                              "justifyContent" : "flex-end"
                            },
                            "layoutClassName" : "radio-container generalPanels-container",
                            "layoutStyle" : { },
                            "name" : "radio",
                            "style" : {
                              "width" : "100%"
                            }
                          },
                          "type" : "FlexList"
                        }, {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "className" : "nextBtn s_button pink",
                                "label" : {
                                  "@class" : "Script",
                                  "content" : "import { getTranslation } from \"./tools/translation\";\n`<p>${getTranslation('mainSim-interface', 'next-phase')}</p>`",
                                  "language" : "TypeScript"
                                },
                                "layoutClassName" : "next-container",
                                "layoutStyle" : { },
                                "localScriptEval" : {
                                  "script" : {
                                    "@class" : "ClientScript",
                                    "content" : "import { timeForward } from \"./UIfacade/timeFacade\";\n\ntimeForward();\n",
                                    "language" : "TypeScript"
                                  }
                                },
                                "name" : "Next",
                                "style" : { }
                              },
                              "type" : "Button"
                            }, {
                              "props" : {
                                "children" : [ {
                                  "props" : {
                                    "children" : [ {
                                      "props" : {
                                        "className" : "actor",
                                        "conditionnalClassNames" : [ {
                                          "applyOn" : "Inside",
                                          "className" : "current",
                                          "condition" : {
                                            "@class" : "Script",
                                            "content" : "Variable.find(gameModel, 'currentActorUid').getValue(self) === Context.actor.Uid;",
                                            "language" : "typescript"
                                          }
                                        } ],
                                        "confirm" : false,
                                        "impactVariable" : {
                                          "impact" : {
                                            "@class" : "Script",
                                            "content" : "Variable.find(gameModel, 'currentActorUid').setValue(self, Context.actor.Uid);",
                                            "language" : "javascript"
                                          }
                                        },
                                        "label" : {
                                          "@class" : "Script",
                                          "content" : "Context.actor.Role;",
                                          "language" : "TypeScript"
                                        },
                                        "layoutStyle" : { },
                                        "style" : { }
                                      },
                                      "type" : "Button"
                                    } ],
                                    "exposeAs" : "actor",
                                    "getItemsFn" : {
                                      "@class" : "Script",
                                      "content" : "import { getAllActors } from \"./UIfacade/actorFacade\";\ngetAllActors();",
                                      "language" : "TypeScript"
                                    },
                                    "itemKey" : "Uid",
                                    "layout" : {
                                      "alignItems" : "center",
                                      "flexDirection" : "column",
                                      "justifyContent" : "center"
                                    },
                                    "layoutStyle" : { },
                                    "style" : {
                                      "gap" : "5px",
                                      "minWidth" : "5em"
                                    }
                                  },
                                  "type" : "For each"
                                } ],
                                "className" : "actor_button",
                                "layout" : {
                                  "flexDirection" : "column"
                                },
                                "layoutClassName" : "timeline-actors",
                                "layoutStyle" : { },
                                "name" : "timeline-actors",
                                "style" : {
                                  "paddingTop" : "calc(2em + 10px)"
                                }
                              },
                              "type" : "FlexList"
                            }, {
                              "props" : {
                                "children" : [ {
                                  "props" : {
                                    "layoutStyle" : { },
                                    "style" : { },
                                    "text" : {
                                      "@class" : "Script",
                                      "content" : "import { createGrid } from \"./gameInterface/timeline\";\nimport { getSimTime } from \"./UIfacade/timeFacade\";\ncreateGrid(getSimTime());",
                                      "language" : "TypeScript"
                                    }
                                  },
                                  "type" : "Text"
                                } ],
                                "className" : "display",
                                "layout" : { },
                                "layoutClassName" : "timeline-display",
                                "layoutStyle" : {
                                  "overflow" : "auto"
                                },
                                "name" : "timeline-display",
                                "style" : { }
                              },
                              "type" : "FlexList"
                            } ],
                            "className" : "timeline",
                            "layout" : {
                              "flexDirection" : "row"
                            },
                            "layoutClassName" : "timeline-container",
                            "layoutStyle" : {
                              "overflow" : "hidden"
                            },
                            "name" : "timeline",
                            "style" : {
                              "overflow" : "hidden"
                            }
                          },
                          "type" : "FlexList"
                        } ],
                        "layoutClassName" : "interface-container noMargin",
                        "layoutStyle" : { },
                        "name" : "interface",
                        "onAbsoluteClick" : { },
                        "style" : {
                          "margin" : "0"
                        }
                      },
                      "type" : "AbsoluteLayout"
                    }, {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "OSMLayer" : false,
                            "children" : [ {
                              "props" : {
                                "children" : [ {
                                  "props" : {
                                    "children" : [ {
                                      "props" : {
                                        "children" : [ {
                                          "props" : {
                                            "icon" : "times",
                                            "label" : {
                                              "@class" : "Script",
                                              "content" : "\"\"",
                                              "language" : "TypeScript"
                                            },
                                            "layoutStyle" : { },
                                            "localScriptEval" : {
                                              "script" : {
                                                "@class" : "ClientScript",
                                                "content" : "import { endMapAction, getMapState } from \"./gameMap/main\";\n\nconst logger = Helpers.getLogger('mainSim-interface');\nlogger.info('Cancel action button')\n\nif (getMapState().mapAction) {\n\tendMapAction();\n}",
                                                "language" : "TypeScript"
                                              }
                                            },
                                            "style" : { }
                                          },
                                          "type" : "Button"
                                        }, {
                                          "props" : {
                                            "icon" : "check",
                                            "label" : {
                                              "@class" : "Script",
                                              "content" : "\"\"",
                                              "language" : "TypeScript"
                                            },
                                            "layoutStyle" : { },
                                            "localScriptEval" : {
                                              "script" : {
                                                "@class" : "ClientScript",
                                                "content" : "import { getCurrentActionUid, getCurrentActorUid } from \"./gameInterface/main\";\nimport { endMapAction } from \"./gameMap/main\";\nimport { getActionTemplate, planAction } from \"./UIfacade/actionFacade\";\n\nconst actorUid = getCurrentActorUid();\n\nconst action = getActionTemplate(getCurrentActionUid());\nconst ref = action!.getTemplateRef();\n\n// TODO Add validation for featureType\nplanAction(ref, actorUid);\nendMapAction();",
                                                "language" : "TypeScript"
                                              }
                                            },
                                            "style" : { }
                                          },
                                          "type" : "Button"
                                        } ],
                                        "layout" : { },
                                        "layoutStyle" : { },
                                        "style" : {
                                          "background" : "#F6F7F9",
                                          "borderRadius" : "10px"
                                        }
                                      },
                                      "type" : "FlexList"
                                    }, {
                                      "props" : {
                                        "layoutStyle" : { },
                                        "script" : {
                                          "@class" : "Script",
                                          "content" : "import { DefineMapObjectTemplate } from \"./game/common/actions/actionTemplateBase\";\nimport { getActionTemplate } from \"./UIfacade/actionFacade\";\nconst actionUid = Variable.find(gameModel, 'currentActionUid').getValue(self);\nconst template = getActionTemplate(actionUid) as DefineMapObjectTemplate;\n\n`/maps/mapIcons/${template.featureDescription.icon}.svg`;",
                                          "language" : "TypeScript"
                                        },
                                        "style" : {
                                          "height" : "50px",
                                          "opacity" : ".5",
                                          "width" : "50px"
                                        }
                                      },
                                      "type" : "Image"
                                    } ],
                                    "hideIf" : {
                                      "@class" : "Script",
                                      "content" : "import { isMapAction } from \"./gameMap/main\";\n!isMapAction();",
                                      "language" : "typescript"
                                    },
                                    "layout" : {
                                      "alignItems" : "center",
                                      "flexDirection" : "column"
                                    },
                                    "layoutStyle" : { },
                                    "style" : { }
                                  },
                                  "type" : "FlexList"
                                } ],
                                "layoutStyle" : { },
                                "name" : "Tmp Menu",
                                "overlayProps" : {
                                  "offset" : {
                                    "@class" : "Script",
                                    "content" : "([-55,-105])",
                                    "language" : "typescript"
                                  },
                                  "positionOnClick" : true,
                                  "projection" : "EPSG:2056"
                                },
                                "style" : { }
                              },
                              "type" : "WegasMapOverlay"
                            }, {
                              "props" : {
                                "layerId" : "",
                                "layerProps" : {
                                  "zIndex" : 91
                                },
                                "layerSource" : {
                                  "dataType" : "GeoJSON",
                                  "source" : {
                                    "@class" : "Script",
                                    "content" : "import { getMultiPolygonLayer } from \"./gameMap/layers/multiPolygonFeatures\";\ngetMultiPolygonLayer();",
                                    "language" : "typescript"
                                  },
                                  "type" : "VectorLayer",
                                  "useSpatialIndex" : true
                                },
                                "layerStyle" : {
                                  "@class" : "ScriptCallback",
                                  "args" : [ "feature", "resolution" ],
                                  "content" : "import { getMultiPolygonLayerStyle } from \"./gameMap/layers/multiPolygonFeatures\";\ngetMultiPolygonLayerStyle(feature);"
                                },
                                "layoutStyle" : { },
                                "name" : "MultiPolygonLayer",
                                "style" : { }
                              },
                              "type" : "WegasMapVectorLayer"
                            }, {
                              "props" : {
                                "layerId" : "",
                                "layerProps" : {
                                  "zIndex" : 91
                                },
                                "layerSource" : {
                                  "dataType" : "GeoJSON",
                                  "source" : {
                                    "@class" : "Script",
                                    "content" : "import { getPolygonLayer } from \"./gameMap/layers/polygonFeatures\";\ngetPolygonLayer();",
                                    "language" : "typescript"
                                  },
                                  "type" : "VectorLayer",
                                  "useSpatialIndex" : true
                                },
                                "layerStyle" : {
                                  "@class" : "ScriptCallback",
                                  "args" : [ "feature", "resolution" ],
                                  "content" : "import { getPolygonLayerStyle } from \"./gameMap/layers/polygonFeatures\";\ngetPolygonLayerStyle(feature);"
                                },
                                "layoutStyle" : { },
                                "name" : "PolygonLayer",
                                "style" : { }
                              },
                              "type" : "WegasMapVectorLayer"
                            }, {
                              "props" : {
                                "disableIf" : {
                                  "@class" : "Script",
                                  "content" : "import { getPointLayer } from \"./gameMap/layers/pointFeatures\";\ngetPointLayer() === undefined;",
                                  "language" : "typescript"
                                },
                                "layerId" : "",
                                "layerProps" : {
                                  "zIndex" : 91
                                },
                                "layerSource" : {
                                  "dataType" : "GeoJSON",
                                  "source" : {
                                    "@class" : "Script",
                                    "content" : "import { getPointLayer } from \"./gameMap/layers/pointFeatures\";\ngetPointLayer();",
                                    "language" : "typescript"
                                  },
                                  "sourceProjection" : "EPSG:2056",
                                  "type" : "VectorLayer",
                                  "useSpatialIndex" : true
                                },
                                "layerStyle" : {
                                  "@class" : "ScriptCallback",
                                  "args" : [ "feature", "resolution" ],
                                  "content" : "import { getPointLayerStyle } from \"./gameMap/layers/pointFeatures\";\ngetPointLayerStyle(feature);"
                                },
                                "layoutStyle" : { },
                                "name" : "PointLayer",
                                "style" : { }
                              },
                              "type" : "WegasMapVectorLayer"
                            }, {
                              "props" : {
                                "layerId" : "",
                                "layerProps" : { },
                                "layerSource" : {
                                  "dataType" : "GeoJSON",
                                  "source" : {
                                    "@class" : "Script",
                                    "content" : "return(`maps/GVA/water.geojson`)",
                                    "language" : "typescript"
                                  },
                                  "sourceProjection" : "EPSG:4326",
                                  "type" : "VectorLayer",
                                  "useSpatialIndex" : true
                                },
                                "layerStyle" : {
                                  "@class" : "ScriptCallback",
                                  "args" : [ "feature", "resolution" ],
                                  "content" : "import { getWaterStyle } from \"./gameMap/styling/mapStyling\";\ngetWaterStyle(feature, resolution);"
                                },
                                "layoutStyle" : { },
                                "name" : "water",
                                "style" : { }
                              },
                              "type" : "WegasMapVectorLayer"
                            }, {
                              "props" : {
                                "layerId" : "",
                                "layerProps" : { },
                                "layerSource" : {
                                  "dataType" : "GeoJSON",
                                  "source" : {
                                    "@class" : "Script",
                                    "content" : "return(`maps/GVA/rails.geojson`)",
                                    "language" : "typescript"
                                  },
                                  "sourceProjection" : "EPSG:4326",
                                  "type" : "VectorLayer",
                                  "useSpatialIndex" : true
                                },
                                "layerStyle" : {
                                  "@class" : "ScriptCallback",
                                  "args" : [ "feature", "resolution" ],
                                  "content" : "import { getRailwayStyle } from \"./gameMap/styling/mapStyling\";\ngetRailwayStyle(resolution);"
                                },
                                "layoutStyle" : { },
                                "name" : "rails",
                                "style" : { }
                              },
                              "type" : "WegasMapVectorLayer"
                            }, {
                              "props" : {
                                "layerId" : "",
                                "layerProps" : {
                                  "zIndex" : 10
                                },
                                "layerSource" : {
                                  "dataType" : "GeoJSON",
                                  "source" : {
                                    "@class" : "Script",
                                    "content" : "return(`maps/GVA/roads.geojson`)",
                                    "language" : "typescript"
                                  },
                                  "sourceProjection" : "EPSG:4326",
                                  "type" : "VectorLayer",
                                  "useSpatialIndex" : true
                                },
                                "layerStyle" : {
                                  "@class" : "ScriptCallback",
                                  "args" : [ "feature", "resolution" ],
                                  "content" : "import { getRoadStyle } from \"./gameMap/styling/mapStyling\";\ngetRoadStyle(feature, resolution);"
                                },
                                "layoutStyle" : { },
                                "name" : "roads",
                                "style" : { }
                              },
                              "type" : "WegasMapVectorLayer"
                            }, {
                              "props" : {
                                "layerId" : "",
                                "layerProps" : { },
                                "layerSource" : {
                                  "dataType" : "GeoJSON",
                                  "source" : {
                                    "@class" : "Script",
                                    "content" : "//wlog(Context.mapId.mapId)\nreturn(`maps/GVA/buildings.geojson`)",
                                    "language" : "typescript"
                                  },
                                  "sourceProjection" : "EPSG:4326",
                                  "type" : "VectorLayer",
                                  "useSpatialIndex" : true
                                },
                                "layerStyle" : {
                                  "fill" : {
                                    "color" : "#CCD2D7",
                                    "type" : "FillStyle"
                                  },
                                  "stroke" : {
                                    "color" : "#B1BFCD",
                                    "lineCap" : "round",
                                    "lineJoin" : "round",
                                    "miterLimit" : 10,
                                    "type" : "StrokeStyle",
                                    "width" : 1
                                  }
                                },
                                "layoutStyle" : { },
                                "name" : "buildings",
                                "style" : { }
                              },
                              "type" : "WegasMapVectorLayer"
                            } ],
                            "conditionnalClassNames" : [ {
                              "applyOn" : "Outside",
                              "className" : "cursor-crosshair",
                              "condition" : {
                                "@class" : "Script",
                                "content" : "Variable.find(gameModel, 'isMapAction').getValue(self);",
                                "language" : "typescript"
                              }
                            } ],
                            "debug" : false,
                            "id" : "",
                            "layoutClassName" : "map",
                            "layoutStyle" : {
                              "backgroundColor" : "#E7EEE3",
                              "flexGrow" : "1",
                              "height" : "100%",
                              "width" : "100%"
                            },
                            "mapOptions" : {
                              "onClick" : {
                                "@class" : "ScriptCallback",
                                "args" : [ "coord", "features" ],
                                "content" : "import { handleMapClick } from './gameMap/main';\nhandleMapClick({x: coord[0], y: coord[1]}, features);\nreturn;"
                              }
                            },
                            "style" : { },
                            "viewOptions" : {
                              "center" : [ 2497449, 1120779 ],
                              "extent" : [ 2496886.446917642, 1120206.0764877768, 2498495.0351261925, 1121778.2033636002 ],
                              "projection" : {
                                "@class" : "Script",
                                "content" : "import { swissDefaultProjection } from \"./map/layersData\";\nswissDefaultProjection;",
                                "language" : "typescript"
                              },
                              "zoom" : 18.5
                            }
                          },
                          "type" : "WegasMap"
                        } ],
                        "layout" : { },
                        "layoutStyle" : {
                          "height" : "100%",
                          "width" : "100%"
                        },
                        "name" : "",
                        "style" : { }
                      },
                      "type" : "FlexList"
                    } ],
                    "id" : "",
                    "layout" : {
                      "flexDirection" : "column"
                    },
                    "layoutClassName" : "main-game",
                    "layoutStyle" : {
                      "height" : "100%",
                      "margin" : "0",
                      "overflow" : "hidden",
                      "padding" : "0",
                      "width" : "100%"
                    },
                    "name" : "game",
                    "style" : { }
                  },
                  "type" : "FlexList"
                } ],
                "layout" : {
                  "flexDirection" : "column"
                },
                "layoutStyle" : {
                  "height" : "100%",
                  "width" : "100%"
                },
                "name" : "root",
                "style" : { }
              },
              "type" : "FlexList"
            } ]
          },
          "type" : "PlayerElse"
        } ],
        "ifCondition" : {
          "@class" : "Script",
          "content" : "import { getGameStateStatus } from \"./gameInterface/main\";\ngetGameStateStatus() === \"NOT_INITIATED\";",
          "language" : "typescript"
        },
        "layoutStyle" : {
          "height" : "100%",
          "width" : "100%"
        },
        "style" : { }
      },
      "type" : "If Else"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "overflow" : "auto",
      "width" : "100%"
    }
  },
  "type" : "FlexList"
}