{
  "props" : {
    "children" : [ {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : { },
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "import { initCache } from \"./UIfacade/patientGenFacade\";\n  initCache();\n  '';",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "children" : [ {
                  "props" : {
                    "layoutStyle" : { },
                    "script" : {
                      "@class" : "Script",
                      "content" : "import { getTypedGenState } from \"./UIfacade/patientGenFacade\";\n  getTypedGenState().generation.generated;",
                      "language" : "TypeScript"
                    },
                    "style" : { }
                  },
                  "type" : "Number"
                }, {
                  "props" : {
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"<p>Gen Async</p>\"",
                      "language" : "TypeScript"
                    },
                    "layoutStyle" : { },
                    "localScriptEval" : {
                      "script" : {
                        "@class" : "ClientScript",
                        "content" : "import { addPatientsAsync } from \"./UIfacade/patientGenFacade\";\naddPatientsAsync({dead: 2, immediate:2, non_urgent:2, urgent:2});",
                        "language" : "TypeScript",
                        "returnType" : "Promise<unknown> | undefined"
                      }
                    },
                    "name" : "gen",
                    "style" : { }
                  },
                  "type" : "Button"
                }, {
                  "props" : {
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"<p>Reset</p>\"",
                      "language" : "TypeScript"
                    },
                    "layoutStyle" : { },
                    "localScriptEval" : {
                      "script" : {
                        "@class" : "ClientScript",
                        "content" : "import { resetAll } from \"./UIfacade/patientGenFacade\";\n\nresetAll();",
                        "language" : "TypeScript"
                      }
                    },
                    "name" : "reset",
                    "style" : { }
                  },
                  "type" : "Button"
                } ],
                "layout" : {
                  "flexDirection" : "row"
                },
                "layoutStyle" : { },
                "style" : { }
              },
              "type" : "FlexList"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "layoutStyle" : { },
                        "name" : "id",
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "  Context.patient.id;",
                          "language" : "TypeScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "layoutStyle" : { },
                                "name" : "category",
                                "style" : { },
                                "text" : {
                                  "@class" : "Script",
                                  "content" : "import { categoryToHtml } from \"./game/pretri/triage\";\n  categoryToHtml(Context.sample.patient.preTriageResult.categoryId);",
                                  "language" : "TypeScript"
                                }
                              },
                              "type" : "Text"
                            } ]
                          },
                          "type" : "FlexList"
                        } ],
                        "exposeAs" : "sample",
                        "getItemsFn" : {
                          "@class" : "Script",
                          "content" : "import { getPatientSamples } from \"./UIfacade/patientGenFacade\";\n  getPatientSamples(Context.patient.samples);",
                          "language" : "TypeScript"
                        },
                        "itemKey" : "time",
                        "layout" : { },
                        "layoutStyle" : { },
                        "name" : "timing",
                        "style" : { }
                      },
                      "type" : "For each"
                    }, {
                      "props" : {
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Regenerate</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "script" : {
                            "@class" : "ClientScript",
                            "content" : "import { regenerateOne } from \"./UIfacade/patientGenFacade\";\n  regenerateOne(Context.patient.id)",
                            "language" : "TypeScript",
                            "returnType" : "Promise<unknown> | undefined"
                          }
                        },
                        "name" : "regen",
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Delete</p>\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "script" : {
                            "@class" : "ClientScript",
                            "content" : "import { deleteOne } from \"./UIfacade/patientGenFacade\";\n\ndeleteOne(Context.patient.id);",
                            "language" : "TypeScript"
                          }
                        },
                        "style" : { }
                      },
                      "type" : "Button"
                    } ],
                    "layout" : { },
                    "layoutStyle" : { },
                    "name" : "entry",
                    "style" : { }
                  },
                  "type" : "FlexList"
                } ],
                "exposeAs" : "patient",
                "getItemsFn" : {
                  "@class" : "Script",
                  "content" : "import { getPatientsSamples } from \"./UIfacade/patientGenFacade\";\n  getPatientsSamples();",
                  "language" : "TypeScript"
                },
                "itemKey" : "id",
                "layout" : {
                  "flexDirection" : "column"
                },
                "layoutStyle" : { },
                "name" : "patient",
                "style" : { }
              },
              "type" : "For each"
            } ],
            "layout" : {
              "flexDirection" : "column"
            },
            "layoutStyle" : { },
            "style" : { }
          },
          "type" : "FlexList"
        } ],
        "exposeAs" : "genState",
        "initialState" : {
          "@class" : "Script",
          "content" : "import { getDefaultGenerationState } from \"./UIfacade/patientGenFacade\";\ngetDefaultGenerationState();",
          "language" : "TypeScript"
        },
        "layoutStyle" : { },
        "localState" : true,
        "style" : { }
      },
      "type" : "State"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "overflow" : "auto",
      "width" : "100%"
    }
  },
  "type" : "FlexList"
}