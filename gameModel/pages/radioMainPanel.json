{
  "props" : {
    "children" : [ {
      "props" : {
        "className" : "mimms_h2title",
        "layoutClassName" : "",
        "layoutStyle" : { },
        "name" : "Title",
        "style" : { },
        "text" : {
          "@class" : "Script",
          "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-interface', 'radio');",
          "language" : "TypeScript"
        }
      },
      "type" : "Text"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "className" : "button-channel ",
            "conditionnalClassNames" : [ {
              "applyOn" : "Inside",
              "className" : "button-channel_selected",
              "condition" : {
                "@class" : "Script",
                "content" : "import { ActionType } from \"./game/common/actionType\";\nContext.interfaceState.state.channel == Context.channel.type;",
                "language" : "typescript"
              }
            }, {
              "applyOn" : "Inside",
              "className" : "not-active-channel",
              "condition" : {
                "@class" : "Script",
                "content" : "Context.interfaceState.state.channel != Context.channel.type;",
                "language" : "typescript"
              }
            } ],
            "hideIf" : {
              "@class" : "Script",
              "content" : "import { isChannelHidden } from \"./UIfacade/radioFacade\";\nisChannelHidden(Context.channel.type);",
              "language" : "typescript"
            },
            "label" : {
              "@class" : "Script",
              "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-radio', Context.channel.translationKey);",
              "language" : "TypeScript"
            },
            "layoutClassName" : "button-channel-container",
            "layoutStyle" : { },
            "localScriptEval" : {
              "script" : {
                "@class" : "ClientScript",
                "content" : "import { getAvailableRadioMessagesForChannel, setChannelType, updateReadMessages } from \"./UIfacade/radioFacade\";\n\nsetChannelType(Context.channel.type);\nupdateReadMessages(Context.channel.type, getAvailableRadioMessagesForChannel(Context.channel.type).length);",
                "language" : "TypeScript",
                "returnType" : "Promise<unknown> | undefined"
              }
            },
            "style" : { },
            "unreadCount" : {
              "@class" : "Script",
              "content" : "import { getUnreadMessagesCountBullet } from \"./UIfacade/radioFacade\";\ngetUnreadMessagesCountBullet(Context.channel.type);",
              "language" : "TypeScript"
            }
          },
          "type" : "Button"
        } ],
        "className" : "noPadding noMargin",
        "exposeAs" : "channel",
        "getItemsFn" : {
          "@class" : "Script",
          "content" : "import { getRadioChannels } from \"./UIfacade/radioFacade\";\nObject.values(getRadioChannels());",
          "language" : "TypeScript"
        },
        "itemKey" : "type",
        "layout" : { },
        "layoutClassName" : "noPadding noMargin",
        "layoutStyle" : { },
        "name" : "Channel choice",
        "style" : { }
      },
      "type" : "For each"
    }, {
      "props" : {
        "className" : "noPadding noMargin",
        "exposePageSizeAs" : "",
        "id" : "",
        "initialSelectedPageId" : {
          "@class" : "Script",
          "content" : "import { ActionType } from \"./game/common/actionType\";\nlet page = '';\nswitch(Context.interfaceState.state.channel) {\n\tcase ActionType.CASU_RADIO: page = 'radioChannelCentrale'; break;\n\tcase ActionType.ACTORS_RADIO: page = 'radioChannelIntra'; break;\n\tcase ActionType.RESOURCES_RADIO: page = 'radioChannelRH'; break;\n\tcase ActionType.EVASAN_RADIO: page = 'radioChannelEvacuation'; break;\n\tdefault: page = 'radioChannelCentrale';\n}\npage;",
          "language" : "typescript"
        },
        "layoutClassName" : "noPadding noMargin",
        "layoutStyle" : { },
        "name" : "Channel page loader",
        "style" : { }
      },
      "type" : "PageLoader"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutClassName" : "leftSubPanel-container",
    "layoutStyle" : { },
    "style" : { }
  },
  "type" : "FlexList"
}