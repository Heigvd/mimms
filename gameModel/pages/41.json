{
  "props" : {
    "children" : [ {
      "props" : {
        "layoutStyle" : { },
        "name" : "eventLoop cheat",
        "style" : { },
        "text" : {
          "@class" : "Script",
          "content" : "import { triggerEventLoop } from \"./UIfacade/debugFacade\";\ntriggerEventLoop()\n\"<p>(Trigger event loop hack)</p>\"",
          "language" : "TypeScript"
        }
      },
      "type" : "Text"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>Force Run Event Loop<br></p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "localScriptEval" : {
              "script" : {
                "@class" : "ClientScript",
                "content" : "import { triggerEventLoop } from \"./UIfacade/debugFacade\";\n\ntriggerEventLoop();",
                "language" : "TypeScript"
              }
            },
            "name" : "Force Run Event Loop",
            "style" : { }
          },
          "type" : "Button"
        }, {
          "props" : {
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>Log state<br></p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "localScriptEval" : {
              "script" : {
                "@class" : "ClientScript",
                "content" : "import { getCurrentState } from \"./UIfacade/debugFacade\";\n\nwlog(getCurrentState())",
                "language" : "TypeScript"
              }
            },
            "name" : "Log state",
            "style" : { }
          },
          "type" : "Button"
        }, {
          "props" : {
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>Log Sim Time<br></p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "localScriptEval" : {
              "script" : {
                "@class" : "ClientScript",
                "content" : "import { getSimTime } from \"./UIfacade/timeFacade\";\n\nwlog(getSimTime())",
                "language" : "TypeScript"
              }
            },
            "name" : "Log state",
            "style" : { }
          },
          "type" : "Button"
        }, {
          "props" : {
            "impactVariable" : {
              "impact" : {
                "@class" : "Script",
                "content" : "Variable.find(gameModel, 'debug_LMEBup').add(self, 1);",
                "language" : "javascript"
              },
              "priority" : 2
            },
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>Reset Local State<br></p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "localScriptEval" : {
              "priority" : 1,
              "script" : {
                "@class" : "ClientScript",
                "content" : "import { recomputeLocalState } from \"./UIfacade/debugFacade\";\n\nrecomputeLocalState()",
                "language" : "TypeScript"
              }
            },
            "name" : "Reset local",
            "style" : { }
          },
          "type" : "Button"
        } ]
      },
      "type" : "FlexList"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>State</p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "name" : "State",
            "openPage" : {
              "pageId" : "51",
              "pageLoaderName" : {
                "@class" : "Script",
                "content" : "\"debugPageLoader\"",
                "language" : "TypeScript"
              }
            },
            "style" : { }
          },
          "type" : "Button"
        }, {
          "props" : {
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>Actions<br></p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "name" : "Actions",
            "openPage" : {
              "pageId" : "58",
              "pageLoaderName" : {
                "@class" : "Script",
                "content" : "\"debugPageLoader\"",
                "language" : "TypeScript"
              }
            },
            "style" : { }
          },
          "type" : "Button"
        }, {
          "props" : {
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>Events<br></p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "name" : "Events",
            "openPage" : {
              "pageId" : "59",
              "pageLoaderName" : {
                "@class" : "Script",
                "content" : "\"debugPageLoader\"",
                "language" : "TypeScript"
              }
            },
            "style" : { }
          },
          "type" : "Button"
        }, {
          "props" : {
            "label" : {
              "@class" : "Script",
              "content" : "\"<p>Features<br></p>\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "name" : "Features",
            "openPage" : {
              "pageId" : "60",
              "pageLoaderName" : {
                "@class" : "Script",
                "content" : "\"debugPageLoader\"",
                "language" : "TypeScript"
              }
            },
            "style" : { }
          },
          "type" : "Button"
        } ]
      },
      "type" : "FlexList"
    }, {
      "props" : {
        "exposePageSizeAs" : "",
        "initialSelectedPageId" : {
          "@class" : "Script",
          "content" : "\"51\"",
          "language" : "typescript"
        },
        "layoutStyle" : { },
        "name" : "debugPageLoader",
        "style" : { }
      },
      "type" : "PageLoader"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "overflow" : "auto",
      "width" : "100%"
    }
  },
  "type" : "FlexList"
}