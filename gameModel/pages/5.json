{
  "props" : {
    "children" : [ {
      "props" : {
        "choices" : {
          "@class" : "Script",
          "content" : "import {getPatientAsChoices} from './WegasHelper'\nconst choices = getPatientAsChoices();\t\nchoices;",
          "language" : "typescript"
        },
        "layoutStyle" : { },
        "onVariableChange" : { },
        "script" : {
          "@class" : "Script",
          "content" : "Variable.find(gameModel,'whoAmI')",
          "language" : "JavaScript"
        },
        "style" : { }
      },
      "type" : "Select input"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "children" : [ {
              "props" : {
                "children" : [ {
                  "props" : {
                    "className" : "",
                    "layout" : { },
                    "layoutStyle" : { },
                    "name" : "HACK: time throttle inside",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "import { registerSetStateAndThrottle } from \"./TimeManager\";\n//wlog(\"Hello\" + new Date().getTime());\nregisterSetStateAndThrottle(Context.worldTime.setState);\n\n\"Context: \" + JSON.stringify(Context);",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "layoutStyle" : { },
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "import { getWorldTime } from \"./TimeManager\";\n\"Simulation Time: \" + getWorldTime().time;",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "layoutStyle" : { },
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "\"InSimRef: \" + Variable.find(gameModel,'inSim_ref').getValue(self);",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                } ],
                "layout" : { },
                "layoutStyle" : { },
                "name" : "Time banner",
                "style" : { }
              },
              "type" : "FlexList"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "Variable.find(gameModel, 'currentPatient').getValue(self) === \"\";",
                      "language" : "JavaScript"
                    },
                    "icon" : "stethoscope",
                    "impactVariable" : {
                      "impact" : {
                        "@class" : "Script",
                        "content" : "Variable.find(gameModel, 'showPatientModal').setValue(self, true);",
                        "language" : "JavaScript"
                      }
                    },
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"show patient modal\"",
                      "language" : "JavaScript"
                    },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "Button"
                }, {
                  "props" : {
                    "attachedToId" : "PAGE_LOADER_DEFAULT_ID",
                    "children" : [ {
                      "props" : {
                        "initialSelectedPageId" : {
                          "@class" : "Script",
                          "content" : "\"6\"",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "name" : "patientPageLoader",
                        "style" : { }
                      },
                      "type" : "PageLoader"
                    } ],
                    "className" : "modalPatient",
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "Variable.find(gameModel, 'currentPatient').getValue(self) === \"\" || Variable.find(gameModel, 'showPatientModal').isFalse(self);",
                      "language" : "JavaScript"
                    },
                    "id" : "",
                    "layout" : { },
                    "layoutStyle" : {
                      "maxHeight" : "100%"
                    },
                    "onExitActions" : {
                      "server" : {
                        "@class" : "Script",
                        "content" : "Variable.find(gameModel, 'showPatientModal').setValue(self, false);",
                        "language" : "JavaScript"
                      }
                    },
                    "style" : { }
                  },
                  "type" : "Modal"
                } ],
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "Variable.find(gameModel, \"currentPatient\").getValue(self) === '';",
                  "language" : "JavaScript"
                },
                "layout" : {
                  "flexDirection" : "column"
                },
                "layoutStyle" : { },
                "style" : { }
              },
              "type" : "FlexList"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "exposeAs" : "item",
                        "getItemsFn" : {
                          "@class" : "Script",
                          "content" : "",
                          "language" : "JavaScript"
                        },
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "Variable.find(gameModel, 'currentPatient').setValue(self, Context.human.id);",
                            "language" : "JavaScript"
                          }
                        },
                        "itemKey" : "id",
                        "layout" : { },
                        "layoutStyle" : {
                          "position" : "absolute"
                        },
                        "stopPropagation" : true,
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "import { getLocatedSmiley } from \"./graphics\";\ngetLocatedSmiley(Context.human);",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    } ],
                    "exposeAs" : "human",
                    "getItemsFn" : {
                      "@class" : "Script",
                      "content" : "import { getHumans } from \"./the_world\";\ngetHumans();",
                      "language" : "JavaScript"
                    },
                    "itemKey" : "id",
                    "itemsOnly" : true,
                    "layout" : { },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "For each"
                }, {
                  "props" : {
                    "exposeAs" : "item",
                    "getItemsFn" : {
                      "@class" : "Script",
                      "content" : "",
                      "language" : "JavaScript"
                    },
                    "id" : "",
                    "itemKey" : "id",
                    "layout" : { },
                    "layoutStyle" : {
                      "pointerEvents" : "none"
                    },
                    "name" : "Fog of War",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "import { getFogOfWar } from \"./graphics\";\ngetFogOfWar();",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "exposeAs" : "item",
                        "getItemsFn" : {
                          "@class" : "Script",
                          "content" : "",
                          "language" : "JavaScript"
                        },
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "Variable.find(gameModel, 'currentPatient').setValue(self, Context.human.id);",
                            "language" : "JavaScript"
                          }
                        },
                        "itemKey" : "id",
                        "layout" : { },
                        "layoutStyle" : {
                          "position" : "absolute"
                        },
                        "stopPropagation" : true,
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "import { getLocatedBubble } from \"./graphics\";\ngetLocatedBubble(Context.human);",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    } ],
                    "exposeAs" : "human",
                    "getItemsFn" : {
                      "@class" : "Script",
                      "content" : "import { getHumans } from \"./the_world\";\ngetHumans();",
                      "language" : "JavaScript"
                    },
                    "itemKey" : "id",
                    "itemsOnly" : true,
                    "layout" : { },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "For each"
                }, {
                  "props" : {
                    "className" : "",
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "Variable.find(gameModel, 'running').getValue(self);",
                      "language" : "JavaScript"
                    },
                    "icon" : "pause",
                    "layoutStyle" : {
                      "pointerEvents" : "none"
                    },
                    "style" : {
                      "height" : "200px",
                      "left" : "450px",
                      "opacity" : "0.2",
                      "position" : "absolute",
                      "top" : "150px",
                      "width" : "revert"
                    }
                  },
                  "type" : "Icon"
                } ],
                "className" : "the_map",
                "id" : "",
                "layout" : { },
                "layoutStyle" : {
                  "boxShadow" : "rgb(255, 255, 255) 0px 0px 0px 25px, rgb(81, 28, 28) 0px 0px 0px 27px",
                  "display" : "none",
                  "height" : "10px",
                  "margin" : "20px",
                  "padding" : "0",
                  "position" : "relative",
                  "width" : "10px"
                },
                "onAbsoluteClick" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "import { handleClickOnMap } from \"./the_world\";\n\nconst point = Context.coord;\nwlog(\"Coord: \", point);\nhandleClickOnMap(Context.coord);",
                    "language" : "TypeScript"
                  },
                  "exposeVariableAs" : {
                    "@class" : "Script",
                    "content" : "\"coord\"",
                    "language" : "JavaScript"
                  }
                },
                "style" : { }
              },
              "type" : "AbsoluteLayout"
            }, {
              "props" : {
                "OSMLayer" : false,
                "children" : [ {
                  "props" : {
                    "layerId" : "",
                    "layerProps" : {
                      "zIndex" : 15
                    },
                    "layerSource" : {
                      "dataType" : "GeoJSON",
                      "source" : {
                        "@class" : "Script",
                        "content" : "import { getHumanLayer } from \"./mapLayers\";\ngetHumanLayer();",
                        "language" : "typescript"
                      },
                      "type" : "VectorLayer",
                      "useSpatialIndex" : true
                    },
                    "layerStyle" : {
                      "image" : {
                        "fill" : {
                          "color" : "blue",
                          "type" : "FillStyle"
                        },
                        "radius" : 3,
                        "stroke" : {
                          "color" : "black",
                          "lineCap" : "round",
                          "lineJoin" : "round",
                          "miterLimit" : 10,
                          "type" : "StrokeStyle",
                          "width" : 1
                        },
                        "type" : "CircleStyle"
                      },
                      "zIndex" : 5
                    },
                    "layoutStyle" : { },
                    "name" : "humans",
                    "onLayerReady" : {
                      "@class" : "Script",
                      "content" : "import { setEmptyLayer } from \"./buildingData\";\nsetEmptyLayer;",
                      "language" : "typescript"
                    },
                    "style" : { }
                  },
                  "type" : "WegasMapVectorLayer"
                }, {
                  "props" : {
                    "layerSource" : {
                      "dataType" : "GeoJSON",
                      "source" : {
                        "@class" : "Script",
                        "content" : "import { getBubbleLayer } from \"./mapLayers\";\ngetBubbleLayer();",
                        "language" : "typescript"
                      },
                      "type" : "VectorLayer"
                    },
                    "layerStyle" : {
                      "@class" : "Script",
                      "content" : "(feature) => ({\n\t\"text\": {\n\t\t\"type\": \"TextStyle\",\n\t\t//\"fill\": { \"type\": \"FillStyle\" },\n\t\t//\"stroke\": { \"type\": \"StrokeStyle\", \"lineCap\": \"round\", \"lineJoin\": \"round\", \"miterLimit\": 1 },\n\t\t\"text\": feature.get(\"text\"), \n\t\t\"textAlign\": \"start\", \n\t\t\"placement\": \"point\", \n\t\t\"textBaseline\": \"bottom\"\n\t}\n})",
                      "language" : "typescript"
                    },
                    "layoutStyle" : { },
                    "name" : "bubbles",
                    "style" : { }
                  },
                  "type" : "WegasMapVectorLayer"
                }, {
                  "props" : {
                    "layerId" : "",
                    "layerProps" : { },
                    "layerSource" : {
                      "dataType" : "GeoJSON",
                      "source" : "/bat.geojson",
                      "sourceProjection" : "EPSG:2056",
                      "type" : "VectorLayer",
                      "useSpatialIndex" : true
                    },
                    "layerStyle" : {
                      "fill" : {
                        "color" : "grey",
                        "type" : "FillStyle"
                      },
                      "zIndex" : 10
                    },
                    "layoutStyle" : { },
                    "name" : "bati",
                    "onLayerReady" : {
                      "@class" : "Script",
                      "content" : "import { setBuildingLayer } from \"./buildingData\";\nsetBuildingLayer",
                      "language" : "typescript"
                    },
                    "style" : { }
                  },
                  "type" : "WegasMapVectorLayer"
                }, {
                  "props" : {
                    "layerId" : "",
                    "layerProps" : {
                      "zIndex" : 1000
                    },
                    "layerSource" : {
                      "dataType" : "GeoJSON",
                      "source" : {
                        "@class" : "Script",
                        "content" : "import { getDebugBuildingLayer } from \"./mapLayers\";\ngetDebugBuildingLayer()",
                        "language" : "typescript"
                      },
                      "sourceProjection" : "EPSG:2056",
                      "type" : "VectorLayer",
                      "useSpatialIndex" : true
                    },
                    "layerStyle" : {
                      "fill" : {
                        "color" : "green",
                        "type" : "FillStyle"
                      },
                      "zIndex" : 10
                    },
                    "layoutStyle" : { },
                    "name" : "bati debug",
                    "onLayerReady" : {
                      "@class" : "Script",
                      "content" : "import { setBuildingDebugLayer } from \"./buildingData\";\nsetBuildingDebugLayer",
                      "language" : "typescript"
                    },
                    "style" : { }
                  },
                  "type" : "WegasMapVectorLayer"
                }, {
                  "props" : {
                    "layerId" : "",
                    "layerProps" : { },
                    "layerSource" : {
                      "dataType" : "GeoJSON",
                      "source" : {
                        "@class" : "Script",
                        "content" : "import { getFogOfWarLayer } from \"./mapLayers\";\ngetFogOfWarLayer();",
                        "language" : "typescript"
                      },
                      "sourceProjection" : "EPSG:2056",
                      "type" : "VectorLayer",
                      "useSpatialIndex" : false
                    },
                    "layerStyle" : {
                      "fill" : {
                        "color" : "#8f96a3c9",
                        "type" : "FillStyle"
                      },
                      "zIndex" : 1
                    },
                    "layoutStyle" : { },
                    "name" : "fogOfWar",
                    "style" : { }
                  },
                  "type" : "WegasMapVectorLayer"
                } ],
                "debug" : false,
                "layoutStyle" : {
                  "flexGrow" : "1",
                  "height" : "500px",
                  "width" : "100%"
                },
                "mapOptions" : {
                  "onClick" : {
                    "@class" : "Script",
                    "content" : "import { handleClickOnMap } from \"./the_world\";\n(coord, features) => handleClickOnMap({x: coord[0], y: coord[1]}, features);",
                    "language" : "typescript"
                  }
                },
                "style" : { },
                "viewOptions" : {
                  "center" : [ 2539119, 1181103 ],
                  "projection" : "EPSG:2056"
                }
              },
              "type" : "WegasMap"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "impactVariable" : {
                      "impact" : {
                        "@class" : "Script",
                        "content" : "Variable.find(gameModel, 'sandbox').enable(self);",
                        "language" : "JavaScript"
                      }
                    },
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"1e vague\"",
                      "language" : "JavaScript"
                    },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "Button"
                }, {
                  "props" : {
                    "impactVariable" : {
                      "impact" : {
                        "@class" : "Script",
                        "content" : "Variable.find(gameModel, 'triggerDescriptor').enable(self);",
                        "language" : "JavaScript"
                      }
                    },
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"2e vague\"",
                      "language" : "JavaScript"
                    },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "Button"
                }, {
                  "props" : {
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"Clear State\"",
                      "language" : "JavaScript"
                    },
                    "localScriptEval" : {
                      "script" : {
                        "@class" : "Script",
                        "content" : "import { clearState } from \"./the_world\";\n\nclearState();",
                        "language" : "TypeScript"
                      }
                    }
                  },
                  "type" : "Button"
                } ],
                "layout" : { },
                "layoutStyle" : { },
                "name" : "old buttons...",
                "style" : { }
              },
              "type" : "FlexList"
            }, {
              "props" : {
                "layoutStyle" : { },
                "style" : { },
                "text" : {
                  "@class" : "Script",
                  "content" : "\"<strong>Communication Type</strong>\"",
                  "language" : "JavaScript"
                }
              },
              "type" : "Text"
            }, {
              "props" : {
                "choices" : [ ],
                "layoutStyle" : { },
                "name" : "comm type",
                "onVariableChange" : { },
                "script" : {
                  "@class" : "Script",
                  "content" : "Variable.find(gameModel,'communicationType')",
                  "language" : "JavaScript"
                },
                "style" : { }
              },
              "type" : "Select input"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "layoutStyle" : { },
                    "name" : "Direct Comm",
                    "onCancel" : { },
                    "onVariableChange" : { },
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "const selected = I18n.toString(Variable.find(gameModel, 'whoAmI'));\n\n`<strong>Direct Communication (speaking as ${selected})</strong>`;",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "layoutStyle" : { },
                        "onCancel" : { },
                        "onVariableChange" : { },
                        "placeholder" : {
                          "@class" : "Script",
                          "content" : "\"Type a message\"",
                          "language" : "JavaScript"
                        },
                        "script" : {
                          "@class" : "Script",
                          "content" : "Variable.find(gameModel,'lastMsg')",
                          "language" : "JavaScript"
                        },
                        "style" : { }
                      },
                      "type" : "String input"
                    }, {
                      "props" : {
                        "icon" : "microphone",
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "EventManager.directCommunication();\nVariable.find(gameModel, 'lastMsg').setValue(self, {\n  \"@class\": \"TranslatableContent\",\n  \"translations\": {\n    \"EN\": {\n      \"@class\": \"Translation\",\n      \"lang\": \"EN\",\n      \"status\": \"\",\n      \"translation\": \"\"\n    }\n  },\n  \"version\": 0\n});",
                            "language" : "JavaScript"
                          }
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"Speak\"",
                          "language" : "JavaScript"
                        },
                        "layoutStyle" : { },
                        "name" : "Speak",
                        "onCancel" : { },
                        "onVariableChange" : { },
                        "style" : { }
                      },
                      "type" : "Button"
                    } ],
                    "className" : "",
                    "name" : ""
                  },
                  "type" : "FlexList"
                } ],
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "Variable.find(gameModel, 'communicationType').isNotSelectedValue(self, \"Direct\");",
                  "language" : "JavaScript"
                },
                "layout" : {
                  "flexDirection" : "column"
                },
                "layoutStyle" : { },
                "name" : "Direct comm",
                "style" : { }
              },
              "type" : "FlexList"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "layout" : { },
                        "layoutStyle" : { },
                        "name" : "Direct Comm",
                        "onCancel" : { },
                        "onVariableChange" : { },
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "`<strong>Radio Communication</strong>`;",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "alignSelf" : "flex-start",
                        "hideIf" : {
                          "@class" : "Script",
                          "content" : "import { getRadios } from \"./communication\";\ngetRadios().length > 0",
                          "language" : "JavaScript"
                        },
                        "icon" : "air-freshener",
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "EventManager.radioCreation('Belette furtive', ['A', 'B', 'C'], 'C');\nEventManager.radioCreation('Renard balafré', ['A', 'B', 'C'], 'B');",
                            "language" : "JavaScript"
                          }
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"Create Radios\"",
                          "language" : "JavaScript"
                        },
                        "layout" : { },
                        "layoutStyle" : { },
                        "name" : "Create radio",
                        "onVariableChange" : { },
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "choices" : {
                              "@class" : "Script",
                              "content" : "import {getRadios} from './communication'\ngetRadios().map(r => {return {label: r.name, value: r.id.toString()}})",
                              "language" : "typescript"
                            },
                            "exposeAs" : "state",
                            "initialState" : {
                              "@class" : "Script",
                              "content" : "({})",
                              "language" : "TypeScript"
                            },
                            "layout" : { },
                            "layoutStyle" : { },
                            "localState" : false,
                            "onVariableChange" : {
                              "client" : {
                                "@class" : "Script",
                                "content" : "wlog(Context.radioId)\nContext.radioState.setState({selectedRadioId: Context.radioId})",
                                "language" : "TypeScript"
                              },
                              "exposeVariableAs" : {
                                "@class" : "Script",
                                "content" : "\"radioId\"",
                                "language" : "JavaScript"
                              }
                            },
                            "script" : {
                              "@class" : "Script",
                              "content" : "Context.radioState.state.selectedRadioId;",
                              "language" : "JavaScript"
                            },
                            "style" : { }
                          },
                          "type" : "Select input"
                        }, {
                          "props" : {
                            "choices" : {
                              "@class" : "Script",
                              "content" : "import { getChannelChoices } from \"./communication\";\ngetChannelChoices(Context.radioState.state.selectedRadioId);",
                              "language" : "typescript"
                            },
                            "exposeAs" : "item",
                            "getItemsFn" : {
                              "@class" : "Script",
                              "content" : "",
                              "language" : "TypeScript"
                            },
                            "itemKey" : "id",
                            "layout" : { },
                            "layoutStyle" : { },
                            "onCancel" : { },
                            "onVariableChange" : {
                              "exposeVariableAs" : {
                                "@class" : "Script",
                                "content" : "\"newChannel\"",
                                "language" : "JavaScript"
                              },
                              "server" : {
                                "@class" : "Script",
                                "content" : "EventManager.radioChannelUpdate(Context.radioState.state.selectedRadioId, Context.newChannel);",
                                "language" : "JavaScript"
                              }
                            },
                            "script" : {
                              "@class" : "Script",
                              "content" : "import { getRadio } from \"./communication\";\ngetRadio(Context.radioState.state.selectedRadioId).channel;",
                              "language" : "JavaScript"
                            },
                            "style" : { }
                          },
                          "type" : "Select input"
                        } ]
                      },
                      "type" : "FlexList"
                    }, {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "exposeAs" : "state",
                            "initialState" : {
                              "@class" : "Script",
                              "content" : "({})",
                              "language" : "TypeScript"
                            },
                            "layoutStyle" : { },
                            "localState" : false,
                            "onCancel" : { },
                            "onVariableChange" : { },
                            "placeholder" : {
                              "@class" : "Script",
                              "content" : "\"Type a message\"",
                              "language" : "JavaScript"
                            },
                            "script" : {
                              "@class" : "Script",
                              "content" : "Variable.find(gameModel,'lastRadioMsg')",
                              "language" : "JavaScript"
                            },
                            "style" : { }
                          },
                          "type" : "String input"
                        }, {
                          "props" : {
                            "icon" : "microphone",
                            "impactVariable" : {
                              "impact" : {
                                "@class" : "Script",
                                "content" : "EventManager.radioCommunication(Context.radioState.state.selectedRadioId, Context.radioState.state.selectedChannel);\nVariable.find(gameModel, 'lastRadioMsg').setValue(self, {\n  \"@class\": \"TranslatableContent\",\n  \"translations\": {\n    \"EN\": {\n      \"@class\": \"Translation\",\n      \"lang\": \"EN\",\n      \"status\": \"\",\n      \"translation\": \"\"\n    }\n  },\n  \"version\": 0\n});",
                                "language" : "JavaScript"
                              }
                            },
                            "label" : {
                              "@class" : "Script",
                              "content" : "\"Speak\"",
                              "language" : "JavaScript"
                            },
                            "layoutStyle" : { },
                            "name" : "Speak",
                            "onCancel" : { },
                            "onVariableChange" : { },
                            "style" : { }
                          },
                          "type" : "Button"
                        } ],
                        "className" : "",
                        "name" : ""
                      },
                      "type" : "FlexList"
                    }, {
                      "props" : {
                        "layoutStyle" : { },
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "JSON.stringify(Context.radioState.state);",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "layoutStyle" : { },
                        "name" : " Radio Title",
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "\"<span style=\\\"font-size: 12pt;\\\"><strong>Heard Radio Messages</strong></span>\"",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "layoutStyle" : { },
                        "name" : " Radio Messages",
                        "onVariableChange" : { },
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "import { getRadio, getRadioMessages } from \"./communication\";\nconst radioId = Context.radioState.state.selectedRadioId;\nconst channel = getRadio(radioId).channel;\ngetRadioMessages(channel).join('<br>')",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    } ],
                    "layout" : {
                      "flexDirection" : "column"
                    },
                    "layoutStyle" : { },
                    "name" : "Radio comm",
                    "style" : { }
                  },
                  "type" : "FlexList"
                } ],
                "exposeAs" : "radioState",
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "Variable.find(gameModel, 'communicationType').isNotSelectedValue(self, \"Radio\");",
                  "language" : "JavaScript"
                },
                "initialState" : {
                  "@class" : "Script",
                  "content" : "import { getInitialRadioState } from \"./communication\";\ngetInitialRadioState();",
                  "language" : "TypeScript"
                },
                "layoutStyle" : { },
                "localState" : true,
                "name" : " Radio",
                "style" : { }
              },
              "type" : "State"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "layoutStyle" : { },
                        "name" : " Title",
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "\"<strong>Phone Communication</strong>\"",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "alignSelf" : "flex-start",
                        "hideIf" : {
                          "@class" : "Script",
                          "content" : "import { getMyPhone } from \"./communication\";\ngetMyPhone() !== undefined;",
                          "language" : "JavaScript"
                        },
                        "icon" : "phone",
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "EventManager.phoneCreation();",
                            "language" : "JavaScript"
                          }
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "import { whoAmI } from \"./WegasHelper\";\n\"Create Phone for \" + whoAmI();",
                          "language" : "JavaScript"
                        },
                        "layout" : { },
                        "layoutStyle" : { },
                        "name" : "Create phone",
                        "onVariableChange" : { },
                        "style" : { }
                      },
                      "type" : "Button"
                    }, {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "layoutStyle" : { },
                            "style" : { },
                            "text" : {
                              "@class" : "Script",
                              "content" : "\"Send to\"",
                              "language" : "JavaScript"
                            }
                          },
                          "type" : "Text"
                        }, {
                          "props" : {
                            "choices" : {
                              "@class" : "Script",
                              "content" : "import { getPhoneDropDownList } from \"./communication\";\ngetPhoneDropDownList();",
                              "language" : "typescript"
                            },
                            "layoutStyle" : { },
                            "onVariableChange" : { },
                            "script" : {
                              "@class" : "Script",
                              "content" : "Variable.find(gameModel,'recipientPhoneId')",
                              "language" : "JavaScript"
                            },
                            "style" : { }
                          },
                          "type" : "Select input"
                        } ],
                        "hideIf" : {
                          "@class" : "Script",
                          "content" : "import { userHasPhone } from \"./communication\";\n!userHasPhone();",
                          "language" : "JavaScript"
                        },
                        "layout" : {
                          "flexDirection" : "row"
                        },
                        "layoutStyle" : { },
                        "style" : { }
                      },
                      "type" : "FlexList"
                    }, {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "exposeAs" : "state",
                            "initialState" : {
                              "@class" : "Script",
                              "content" : "({})",
                              "language" : "TypeScript"
                            },
                            "layoutStyle" : { },
                            "localState" : false,
                            "onCancel" : { },
                            "onVariableChange" : { },
                            "placeholder" : {
                              "@class" : "Script",
                              "content" : "\"Type a message\"",
                              "language" : "JavaScript"
                            },
                            "script" : {
                              "@class" : "Script",
                              "content" : "Variable.find(gameModel,'lastPhoneMsg')",
                              "language" : "JavaScript"
                            },
                            "style" : { }
                          },
                          "type" : "String input"
                        }, {
                          "props" : {
                            "icon" : "microphone",
                            "impactVariable" : {
                              "impact" : {
                                "@class" : "Script",
                                "content" : "EventManager.phoneCommunication(Context.phoneState.state.myPhoneId);\nVariable.find(gameModel, 'lastPhoneMsg').setValue(self, {\n  \"@class\": \"TranslatableContent\",\n  \"translations\": {\n    \"EN\": {\n      \"@class\": \"Translation\",\n      \"lang\": \"EN\",\n      \"status\": \"\",\n      \"translation\": \"\"\n    }\n  },\n  \"version\": 0\n});",
                                "language" : "JavaScript"
                              }
                            },
                            "label" : {
                              "@class" : "Script",
                              "content" : "\"Speak\"",
                              "language" : "JavaScript"
                            },
                            "layoutStyle" : { },
                            "name" : "Speak",
                            "onCancel" : { },
                            "onVariableChange" : { },
                            "style" : { }
                          },
                          "type" : "Button"
                        } ],
                        "className" : "",
                        "hideIf" : {
                          "@class" : "Script",
                          "content" : "import { userHasPhone } from \"./communication\";\n!userHasPhone();",
                          "language" : "JavaScript"
                        },
                        "layout" : { },
                        "layoutStyle" : { },
                        "name" : "",
                        "style" : { }
                      },
                      "type" : "FlexList"
                    }, {
                      "props" : {
                        "layoutStyle" : { },
                        "name" : "title",
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "\"<strong>Received messages<br /><br /></strong>from\"",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "choices" : {
                          "@class" : "Script",
                          "content" : "import { getPhoneDropDownList } from \"./communication\";\ngetPhoneDropDownList();",
                          "language" : "typescript"
                        },
                        "layoutStyle" : { },
                        "onVariableChange" : { },
                        "script" : {
                          "@class" : "Script",
                          "content" : "Variable.find(gameModel,'fromPhone')",
                          "language" : "JavaScript"
                        },
                        "style" : { }
                      },
                      "type" : "Select input"
                    }, {
                      "props" : {
                        "layoutStyle" : { },
                        "name" : "msg list",
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "import { getPhoneMessages } from \"./communication\";\nconst selectedPhone = Variable.find(gameModel, 'fromPhone').getValue(self);\ngetPhoneMessages(Number.parseInt(selectedPhone)).join('<br>');",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    } ],
                    "layout" : {
                      "flexDirection" : "column"
                    },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "FlexList"
                }, {
                  "props" : {
                    "id" : "",
                    "layoutStyle" : { },
                    "name" : "debug state",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "JSON.stringify(Context.phoneState.state);",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                } ],
                "exposeAs" : "phoneState",
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "Variable.find(gameModel, 'communicationType').isNotSelectedValue(self, \"Phone\");",
                  "language" : "JavaScript"
                },
                "initialState" : {
                  "@class" : "Script",
                  "content" : "import { getMyPhone } from \"./communication\";\nconst p = getMyPhone();\n({myPhoneId : (p ? p.phoneId : -1)});",
                  "language" : "TypeScript"
                },
                "layoutStyle" : { },
                "localState" : true,
                "name" : "Phone",
                "style" : { }
              },
              "type" : "State"
            } ],
            "layout" : {
              "flexDirection" : "column"
            },
            "layoutStyle" : {
              "flexGrow" : "1"
            },
            "style" : { }
          },
          "type" : "FlexList"
        } ],
        "exposeAs" : "worldTime",
        "initialState" : {
          "@class" : "Script",
          "content" : "({time: 0});",
          "language" : "TypeScript"
        },
        "layoutStyle" : {
          "flexDirection" : "column",
          "flexGrow" : "1"
        },
        "localState" : true,
        "style" : { }
      },
      "type" : "State"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "overflow" : "auto",
      "width" : "100%"
    },
    "style" : { }
  },
  "type" : "FlexList"
}