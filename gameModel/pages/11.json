{
  "props" : {
    "children" : [ {
      "props" : {
        "attachToMostDistant" : ".wegas-pageloader",
        "attachedToId" : "",
        "children" : [ {
          "props" : {
            "initialSelectedPageId" : {
              "@class" : "Script",
              "content" : "\"6\"",
              "language" : "TypeScript"
            },
            "layoutStyle" : {
              "flexGrow" : "1"
            },
            "name" : "patientPageLoaderModal",
            "style" : {
              "overflow" : "auto"
            }
          },
          "type" : "PageLoader"
        } ],
        "className" : "modalPatient",
        "hideIf" : {
          "@class" : "Script",
          "content" : "import { isCurrentPatientCloseEnough } from \"./the_world\";\nVariable.find(gameModel, 'currentPatient').getValue(self) === \"\" \n\t|| Variable.find(gameModel, 'showPatientModal').isFalse(self)\n\t|| !isCurrentPatientCloseEnough();",
          "language" : "JavaScript"
        },
        "id" : "",
        "layout" : { },
        "layoutStyle" : {
          "maxHeight" : "100%"
        },
        "name" : "patientZoom",
        "onExitActions" : {
          "server" : {
            "@class" : "Script",
            "content" : "Variable.find(gameModel, 'showPatientModal').setValue(self, false);",
            "language" : "JavaScript"
          }
        },
        "style" : {
          "width" : "100%"
        }
      },
      "type" : "Modal"
    }, {
      "props" : {
        "className" : "paused-overlay",
        "hideIf" : {
          "@class" : "Script",
          "content" : "Variable.find(gameModel, 'running').getValue(self);",
          "language" : "JavaScript"
        },
        "icon" : "pause",
        "ifCondition" : {
          "@class" : "",
          "content" : "",
          "language" : ""
        },
        "layoutStyle" : {
          "height" : "100%",
          "pointerEvents" : "none",
          "position" : "absolute",
          "width" : "100%"
        },
        "name" : "pause-overlay",
        "style" : {
          "color" : "red",
          "height" : "50%",
          "left" : "25%",
          "margin" : "auto",
          "opacity" : "0.2",
          "position" : "absolute",
          "top" : "25%",
          "width" : "50%",
          "zIndex" : "999"
        }
      },
      "type" : "Icon"
    }, {
      "props" : {
        "initialSelectedPageId" : "21",
        "layoutStyle" : { },
        "name" : "timetoolbar_map",
        "style" : { }
      },
      "type" : "PageLoader"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "children" : [ {
              "props" : {
                "label" : {
                  "@class" : "Script",
                  "content" : "\"1e vague\"",
                  "language" : "JavaScript"
                },
                "layoutStyle" : { },
                "localScriptEval" : {
                  "script" : {
                    "@class" : "Script",
                    "content" : "import {premiereVague} from './scenario';\n\npremiereVague();",
                    "language" : "typescript"
                  }
                },
                "style" : { }
              },
              "type" : "Button"
            }, {
              "props" : {
                "label" : {
                  "@class" : "Script",
                  "content" : "\"Visible buildings\"",
                  "language" : "JavaScript"
                },
                "layoutStyle" : { },
                "name" : "buildings",
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "Context.debugPanels.setState(o=>{\n\treturn {...o,visibleBuildings : !o.visibleBuildings};\n})",
                    "language" : "TypeScript"
                  }
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "Boolean(Context.debugPanels.state.visibleBuildings);",
                  "language" : "JavaScript"
                },
                "style" : { },
                "type" : "checkbox"
              },
              "type" : "Boolean"
            }, {
              "props" : {
                "label" : {
                  "@class" : "Script",
                  "content" : "\"Visible path\"",
                  "language" : "JavaScript"
                },
                "layoutStyle" : { },
                "name" : "path",
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "Context.debugPanels.setState(o=>{\n\treturn {...o,visiblePath : !o.visiblePath};\n})",
                    "language" : "TypeScript"
                  }
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "Boolean(Context.debugPanels.state.visiblePath);",
                  "language" : "JavaScript"
                },
                "style" : { },
                "type" : "checkbox"
              },
              "type" : "Boolean"
            }, {
              "props" : {
                "label" : {
                  "@class" : "Script",
                  "content" : "\"Visible grid\"",
                  "language" : "JavaScript"
                },
                "layoutStyle" : { },
                "name" : "grid",
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "Context.debugPanels.setState(o => {\n\tlet newVisibleGrid = undefined;\n\tif (o[\"visibleGrid\"] == null) {\n\t\tnewVisibleGrid = { value: 0.1, min: 0.1, max: 1 };\n\t}\n\treturn {...o,visibleGrid : newVisibleGrid};\n})",
                    "language" : "TypeScript"
                  }
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "Context.debugPanels.state.visibleGrid != null;",
                  "language" : "JavaScript"
                },
                "style" : { },
                "type" : "checkbox"
              },
              "type" : "Boolean"
            }, {
              "props" : {
                "displayValues" : "Internal",
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "Context.debugPanels.state.visibleGrid == null;",
                  "language" : "JavaScript"
                },
                "layoutStyle" : { },
                "name" : "Grid density",
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "Context.debugPanels.setState(o => ({\n\t...o,\n\tvisibleGrid: { value: Context.value, min: 0.1, max: 1 }\n}))\n",
                    "language" : "TypeScript"
                  }
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "Context.debugPanels.state.visibleGrid ?? {value:0.1,min:0.1,max:1}",
                  "language" : "JavaScript"
                },
                "steps" : 9,
                "style" : { }
              },
              "type" : "NumberSlider"
            } ],
            "layout" : { },
            "layoutStyle" : { },
            "name" : "Debug panel",
            "style" : { }
          },
          "type" : "FlexList"
        }, {
          "props" : {
            "OSMLayer" : false,
            "children" : [ {
              "props" : {
                "layerId" : "",
                "layerProps" : {
                  "zIndex" : 15
                },
                "layerSource" : {
                  "dataType" : "GeoJSON",
                  "source" : {
                    "@class" : "Script",
                    "content" : "import { getHumanLayer } from \"./mapLayers\";\ngetHumanLayer();",
                    "language" : "typescript"
                  },
                  "type" : "VectorLayer",
                  "useSpatialIndex" : true
                },
                "layerStyle" : {
                  "image" : {
                    "fill" : {
                      "color" : "blue",
                      "type" : "FillStyle"
                    },
                    "radius" : 3,
                    "stroke" : {
                      "color" : "black",
                      "lineCap" : "round",
                      "lineJoin" : "round",
                      "miterLimit" : 10,
                      "type" : "StrokeStyle",
                      "width" : 1
                    },
                    "type" : "CircleStyle"
                  },
                  "zIndex" : 5
                },
                "layoutStyle" : { },
                "name" : "humans",
                "onLayerReady" : {
                  "@class" : "ScriptCallback",
                  "args" : [ "layer" ],
                  "content" : "return;"
                },
                "style" : { }
              },
              "type" : "WegasMapVectorLayer"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "layoutStyle" : { },
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "import { getVisualOverviewForHumanId } from \"./graphics\";\ngetVisualOverviewForHumanId(Context.human.id, Context.resolution);",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "icon" : "stethoscope",
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "Variable.find(gameModel, 'currentPatient').setValue(self, Context.human.id);\nVariable.find(gameModel, 'showPatientModal').setValue(self, true);",
                            "language" : "JavaScript"
                          },
                          "priority" : 2
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"&nbsp;\"",
                          "language" : "JavaScript"
                        },
                        "layoutClassName" : "stethoscope",
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "priority" : 1,
                          "script" : {
                            "@class" : "Script",
                            "content" : "import { goToHuman } from \"./the_world\";\n\ngoToHuman(Context.human.id);",
                            "language" : "typescript"
                          }
                        },
                        "stopPropagation" : true,
                        "style" : { }
                      },
                      "type" : "Button"
                    } ],
                    "className" : "humanOverlay",
                    "conditionnalClassNames" : [ {
                      "applyOn" : "Inside",
                      "className" : "me",
                      "condition" : {
                        "@class" : "Script",
                        "content" : "import { whoAmI } from \"./WegasHelper\";\nContext.human.id === whoAmI();",
                        "language" : "JavaScript"
                      }
                    }, {
                      "applyOn" : "Inside",
                      "className" : "not-me",
                      "condition" : {
                        "@class" : "Script",
                        "content" : "import { whoAmI } from \"./WegasHelper\";\nContext.human.id !== whoAmI();",
                        "language" : "JavaScript"
                      }
                    } ],
                    "layout" : { },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "FlexList"
                } ],
                "exposedValueKeys" : {
                  "exposePayloadAs" : "human",
                  "exposeResolutionAs" : "resolution"
                },
                "getItemsFn" : {
                  "@class" : "Script",
                  "content" : "import { getHumanOverlays } from \"./mapLayers\";\ngetHumanOverlays();",
                  "language" : "TypeScript"
                },
                "itemKey" : "id",
                "layoutStyle" : { },
                "name" : "Human Picto",
                "style" : { }
              },
              "type" : "WegasMapOverlays"
            }, {
              "props" : {
                "layerId" : "",
                "layerProps" : { },
                "layerSource" : {
                  "dataType" : "GeoJSON",
                  "source" : {
                    "@class" : "Script",
                    "content" : "import { getBubbleLayer } from \"./mapLayers\";\ngetBubbleLayer();",
                    "language" : "typescript"
                  },
                  "type" : "VectorLayer",
                  "useSpatialIndex" : true
                },
                "layerStyle" : {
                  "@class" : "ScriptCallback",
                  "args" : [ "feature", "resolution" ],
                  "content" : "({\n\t\"text\": {\n\t\t\"type\": \"TextStyle\",\n\t\t//\"fill\": { \"type\": \"FillStyle\" },\n\t\t//\"stroke\": { \"type\": \"StrokeStyle\", \"lineCap\": \"round\", \"lineJoin\": \"round\", \"miterLimit\": 1 },\n\t\t\"text\": feature.get(\"text\"), \n\t\t\"textAlign\": \"start\", \n\t\t\"placement\": \"point\", \n\t\t\"textBaseline\": \"bottom\"\n\t}\n})"
                },
                "layoutStyle" : { },
                "name" : "bubbles",
                "style" : { }
              },
              "type" : "WegasMapVectorLayer"
            }, {
              "props" : {
                "layerId" : "",
                "layerProps" : { },
                "layerSource" : {
                  "dataType" : "GeoJSON",
                  "source" : "/bat_2056_few.geojson",
                  "sourceProjection" : "EPSG:2056",
                  "type" : "VectorLayer",
                  "useSpatialIndex" : true
                },
                "layerStyle" : {
                  "fill" : {
                    "color" : "grey",
                    "type" : "FillStyle"
                  }
                },
                "layoutStyle" : { },
                "name" : "bati",
                "onLayerReady" : {
                  "@class" : "ScriptCallback",
                  "args" : [ "layer", "map", "projection" ],
                  "content" : "import { onBuildingLayerReady } from \"./layersData\";\nonBuildingLayerReady(layer, map);\nreturn;"
                },
                "style" : { }
              },
              "type" : "WegasMapVectorLayer"
            }, {
              "props" : {
                "layerId" : "",
                "layerProps" : { },
                "layerSource" : {
                  "dataType" : "GeoJSON",
                  "source" : {
                    "@class" : "Script",
                    "content" : "import { getFogOfWarLayer } from \"./mapLayers\";\ngetFogOfWarLayer();",
                    "language" : "typescript"
                  },
                  "sourceProjection" : "EPSG:2056",
                  "type" : "VectorLayer",
                  "useSpatialIndex" : false
                },
                "layerStyle" : {
                  "fill" : {
                    "color" : "#8f96a3c9",
                    "type" : "FillStyle"
                  },
                  "zIndex" : 1
                },
                "layoutStyle" : { },
                "name" : "fogOfWar",
                "style" : { }
              },
              "type" : "WegasMapVectorLayer"
            }, {
              "props" : {
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "!Boolean(Context.debugPanels.state.visibleBuildings);",
                  "language" : "JavaScript"
                },
                "layerId" : "",
                "layerProps" : {
                  "zIndex" : 1000
                },
                "layerSource" : {
                  "dataType" : "GeoJSON",
                  "source" : {
                    "@class" : "Script",
                    "content" : "import { getDebugBuildingLayer } from \"./mapLayers\";\ngetDebugBuildingLayer()",
                    "language" : "typescript"
                  },
                  "sourceProjection" : "EPSG:2056",
                  "type" : "VectorLayer",
                  "useSpatialIndex" : true
                },
                "layerStyle" : {
                  "@class" : "ScriptCallback",
                  "args" : [ "feature", "resolution" ],
                  "content" : "const timeColor = (Context.worldTime.state.time ?? 0)*10 % 256;\n({\"fill\":{\"color\":\"rgb(\"+timeColor+\",100,0)\",\"type\":\"FillStyle\"}})"
                },
                "layoutStyle" : { },
                "name" : "[DEBUG] Visible buildings",
                "style" : { }
              },
              "type" : "WegasMapVectorLayer"
            }, {
              "props" : {
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "!Context.debugPanels.state.visibleGrid;",
                  "language" : "JavaScript"
                },
                "layerId" : "",
                "layerProps" : {
                  "zIndex" : 10000
                },
                "layerSource" : {
                  "dataType" : "GeoJSON",
                  "source" : {
                    "@class" : "Script",
                    "content" : "import { emptyFeatureCollection, getObstacleGridLayer } from \"./mapLayers\";\nconst density = Context.debugPanels.state.visibleGrid?.value ?? 0.1;\ngetObstacleGridLayer(density);",
                    "language" : "typescript"
                  },
                  "sourceProjection" : "EPSG:2056",
                  "type" : "VectorLayer",
                  "useSpatialIndex" : true
                },
                "layerStyle" : {
                  "fill" : {
                    "color" : "red",
                    "type" : "FillStyle"
                  }
                },
                "layoutStyle" : { },
                "name" : "[DEBUG] Obstacle grid",
                "onLayerReady" : {
                  "@class" : "ScriptCallback",
                  "args" : [ "layer", "map", "projection" ],
                  "content" : "return;"
                },
                "style" : { }
              },
              "type" : "WegasMapVectorLayer"
            }, {
              "props" : {
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "true;\n!Boolean(Context.debugPanels.state.visiblePath);",
                  "language" : "JavaScript"
                },
                "layerId" : "",
                "layerProps" : { },
                "layerSource" : {
                  "dataType" : "GeoJSON",
                  "source" : {
                    "@class" : "Script",
                    "content" : "import { getPathLayer } from \"./mapLayers\";\ngetPathLayer();",
                    "language" : "typescript"
                  },
                  "sourceProjection" : "EPSG:2056",
                  "type" : "VectorLayer",
                  "useSpatialIndex" : true
                },
                "layerStyle" : {
                  "@class" : "ScriptCallback",
                  "args" : [ "feature", "resolution" ],
                  "content" : "({stroke:{\n\ttype:\"StrokeStyle\",\n\tcolor:feature.get(\"color\"),\n}})"
                },
                "layoutStyle" : { },
                "name" : "[DEBUG] Character Paths",
                "style" : { }
              },
              "type" : "WegasMapVectorLayer"
            } ],
            "debug" : true,
            "layoutStyle" : {
              "backgroundColor" : "rgb(191, 242, 191)",
              "flexGrow" : "1",
              "height" : "500px",
              "width" : "100%"
            },
            "mapOptions" : {
              "onClick" : {
                "@class" : "ScriptCallback",
                "args" : [ "coord", "features" ],
                "content" : "import { handleClickOnMap } from \"./the_world\";\nhandleClickOnMap({x: coord[0], y: coord[1]}, features);\nreturn;"
              }
            },
            "style" : { },
            "viewOptions" : {
              "center" : [ 2539119, 1181103 ],
              "projection" : "EPSG:2056"
            }
          },
          "type" : "WegasMap"
        } ],
        "exposeAs" : "debugPanels",
        "initialState" : {
          "@class" : "Script",
          "content" : "({\n\tvisibleBuildings: false,\n\tvisiblePath: false,\n\tvisibleGrid: null\n})",
          "language" : "TypeScript"
        },
        "layoutStyle" : {
          "flexDirection" : "column",
          "flexGrow" : "1"
        },
        "localState" : true,
        "name" : "Debug state",
        "style" : { }
      },
      "type" : "State"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : { },
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "\"<strong>Communication Type</strong>\"",
              "language" : "JavaScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "choices" : [ ],
            "layoutStyle" : { },
            "name" : "comm type",
            "onVariableChange" : { },
            "script" : {
              "@class" : "Script",
              "content" : "Variable.find(gameModel,'communicationType')",
              "language" : "JavaScript"
            },
            "style" : { }
          },
          "type" : "Select input"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "layoutStyle" : { },
                "name" : "Direct Comm",
                "onCancel" : { },
                "onVariableChange" : { },
                "style" : { },
                "text" : {
                  "@class" : "Script",
                  "content" : "const selected = I18n.toString(Variable.find(gameModel, 'whoAmI'));\n\n`<strong>Direct Communication (speaking as ${selected})</strong>`;",
                  "language" : "JavaScript"
                }
              },
              "type" : "Text"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "layoutStyle" : { },
                    "onCancel" : { },
                    "onVariableChange" : { },
                    "placeholder" : {
                      "@class" : "Script",
                      "content" : "\"Type a message\"",
                      "language" : "JavaScript"
                    },
                    "script" : {
                      "@class" : "Script",
                      "content" : "Variable.find(gameModel,'lastMsg')",
                      "language" : "JavaScript"
                    },
                    "style" : { }
                  },
                  "type" : "String input"
                }, {
                  "props" : {
                    "icon" : "microphone",
                    "impactVariable" : {
                      "impact" : {
                        "@class" : "Script",
                        "content" : "Variable.find(gameModel, 'lastMsg').setValue(self, {\n  \"@class\": \"TranslatableContent\",\n  \"translations\": {\n    \"EN\": {\n      \"@class\": \"Translation\",\n      \"lang\": \"EN\",\n      \"status\": \"\",\n      \"translation\": \"\"\n    }\n  },\n  \"version\": 0\n});",
                        "language" : "JavaScript"
                      },
                      "priority" : 1
                    },
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"<p>Speak</p>\"",
                      "language" : "JavaScript"
                    },
                    "layoutStyle" : { },
                    "localScriptEval" : {
                      "priority" : 0,
                      "script" : {
                        "@class" : "Script",
                        "content" : "import { initEmitterIds } from \"./baseEvent\";\nimport { sendEvent } from \"./EventManager\";\nimport { whoAmI } from \"./WegasHelper\";\n\nsendEvent({\n  ...initEmitterIds(),\n  type: 'DirectCommunication',\n  message : Variable.find(gameModel, 'lastMsg').getValue(self),\n  sender : whoAmI()\n});\n",
                        "language" : "typescript"
                      }
                    },
                    "name" : "Speak",
                    "onCancel" : { },
                    "onVariableChange" : { },
                    "style" : { }
                  },
                  "type" : "Button"
                } ],
                "className" : "",
                "name" : ""
              },
              "type" : "FlexList"
            } ],
            "hideIf" : {
              "@class" : "Script",
              "content" : "Variable.find(gameModel, 'communicationType').isNotSelectedValue(self, \"Direct\");",
              "language" : "JavaScript"
            },
            "layout" : {
              "flexDirection" : "column"
            },
            "layoutStyle" : { },
            "name" : "Direct comm",
            "style" : { }
          },
          "type" : "FlexList"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "children" : [ {
                  "props" : {
                    "layout" : { },
                    "layoutStyle" : { },
                    "name" : "Direct Comm",
                    "onCancel" : { },
                    "onVariableChange" : { },
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "`<strong>Radio Communication</strong>`;",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "alignSelf" : "flex-start",
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "import { getRadios } from \"./communication\";\ngetRadios().length > 0",
                      "language" : "JavaScript"
                    },
                    "icon" : "air-freshener",
                    "label" : {
                      "@class" : "Script",
                      "content" : "\"<p>Create Radios</p>\"",
                      "language" : "JavaScript"
                    },
                    "layout" : { },
                    "layoutStyle" : { },
                    "localScriptEval" : {
                      "script" : {
                        "@class" : "Script",
                        "content" : "import { emitRadioCreation } from \"./communication\";\n\nemitRadioCreation('Belette furtive', ['A', 'B', 'C'], 'C');\nemitRadioCreation('Renard balafré', ['A', 'B', 'C'], 'B');\n",
                        "language" : "typescript"
                      }
                    },
                    "name" : "Create radio",
                    "onVariableChange" : { },
                    "style" : { }
                  },
                  "type" : "Button"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "choices" : {
                          "@class" : "Script",
                          "content" : "import {getRadios} from './communication'\ngetRadios().map(r => {return {label: r.name, value: r.id.toString()}})",
                          "language" : "typescript"
                        },
                        "exposeAs" : "state",
                        "initialState" : {
                          "@class" : "Script",
                          "content" : "({})",
                          "language" : "TypeScript"
                        },
                        "layout" : { },
                        "layoutStyle" : { },
                        "localState" : false,
                        "onVariableChange" : {
                          "client" : {
                            "@class" : "Script",
                            "content" : "wlog(Context.radioId)\nContext.radioState.setState({selectedRadioId: Context.radioId})",
                            "language" : "TypeScript"
                          },
                          "exposeVariableAs" : {
                            "@class" : "Script",
                            "content" : "\"radioId\"",
                            "language" : "JavaScript"
                          }
                        },
                        "script" : {
                          "@class" : "Script",
                          "content" : "Context.radioState.state.selectedRadioId;",
                          "language" : "JavaScript"
                        },
                        "style" : { }
                      },
                      "type" : "Select input"
                    }, {
                      "props" : {
                        "choices" : {
                          "@class" : "Script",
                          "content" : "import { getChannelChoices } from \"./communication\";\ngetChannelChoices(Context.radioState.state.selectedRadioId);",
                          "language" : "typescript"
                        },
                        "exposeAs" : "item",
                        "getItemsFn" : {
                          "@class" : "Script",
                          "content" : "",
                          "language" : "TypeScript"
                        },
                        "itemKey" : "id",
                        "layout" : { },
                        "layoutStyle" : { },
                        "onCancel" : { },
                        "onVariableChange" : {
                          "client" : {
                            "@class" : "Script",
                            "content" : "import { emitRadioChannelUpdateEvent } from \"./communication\";\n\nemitRadioChannelUpdateEvent(Context.radioState.state.selectedRadioId, Context.newChannel);",
                            "language" : "TypeScript"
                          },
                          "exposeVariableAs" : {
                            "@class" : "Script",
                            "content" : "\"newChannel\"",
                            "language" : "JavaScript"
                          },
                          "server" : {
                            "@class" : "Script",
                            "content" : ";",
                            "language" : "JavaScript"
                          }
                        },
                        "script" : {
                          "@class" : "Script",
                          "content" : "import { getRadio } from \"./communication\";\nconst r = getRadio(Context.radioState.state.selectedRadioId);\nr ? r.channel : 'No channel';",
                          "language" : "JavaScript"
                        },
                        "style" : { }
                      },
                      "type" : "Select input"
                    } ]
                  },
                  "type" : "FlexList"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "exposeAs" : "state",
                        "initialState" : {
                          "@class" : "Script",
                          "content" : "({})",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localState" : false,
                        "onCancel" : { },
                        "onVariableChange" : { },
                        "placeholder" : {
                          "@class" : "Script",
                          "content" : "\"Type a message\"",
                          "language" : "JavaScript"
                        },
                        "script" : {
                          "@class" : "Script",
                          "content" : "Variable.find(gameModel,'lastRadioMsg')",
                          "language" : "JavaScript"
                        },
                        "style" : { }
                      },
                      "type" : "String input"
                    }, {
                      "props" : {
                        "icon" : "microphone",
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "Variable.find(gameModel, 'lastRadioMsg').setValue(self, {\n  \"@class\": \"TranslatableContent\",\n  \"translations\": {\n    \"EN\": {\n      \"@class\": \"Translation\",\n      \"lang\": \"EN\",\n      \"status\": \"\",\n      \"translation\": \"\"\n    }\n  },\n  \"version\": 0\n});",
                            "language" : "JavaScript"
                          },
                          "priority" : 1
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Speak</p>\"",
                          "language" : "JavaScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "priority" : 0,
                          "script" : {
                            "@class" : "Script",
                            "content" : "import { emitRadioCommunication } from \"./communication\";\n\nconst msg = Variable.find(gameModel, 'lastRadioMsg').getValue(self);\nemitRadioCommunication(msg, Context.radioState.state.selectedRadioId);",
                            "language" : "typescript"
                          }
                        },
                        "name" : "Speak",
                        "onCancel" : { },
                        "onVariableChange" : { },
                        "style" : { }
                      },
                      "type" : "Button"
                    } ],
                    "className" : "",
                    "name" : ""
                  },
                  "type" : "FlexList"
                }, {
                  "props" : {
                    "layoutStyle" : { },
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "JSON.stringify(Context.radioState.state);",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "layoutStyle" : { },
                    "name" : " Radio Title",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "\"<span style=\\\"font-size: 12pt;\\\"><strong>Heard Radio Messages</strong></span>\"",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "layoutStyle" : { },
                    "name" : " Radio Messages",
                    "onVariableChange" : { },
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "import { getRadio, getRadioMessages } from \"./communication\";\nconst radioId = Context.radioState.state.selectedRadioId || -1;\nconst channel = getRadio(radioId)?.channel;\ngetRadioMessages(channel || '').join('<br>')",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                } ],
                "layout" : {
                  "flexDirection" : "column"
                },
                "layoutStyle" : { },
                "name" : "Radio comm",
                "style" : { }
              },
              "type" : "FlexList"
            } ],
            "exposeAs" : "radioState",
            "hideIf" : {
              "@class" : "Script",
              "content" : "Variable.find(gameModel, 'communicationType').isNotSelectedValue(self, \"Radio\");",
              "language" : "JavaScript"
            },
            "initialState" : {
              "@class" : "Script",
              "content" : "import { getInitialRadioState } from \"./communication\";\ngetInitialRadioState();",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "localState" : true,
            "name" : " Radio",
            "style" : { }
          },
          "type" : "State"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "children" : [ {
                  "props" : {
                    "layoutStyle" : { },
                    "name" : " Title",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "\"<strong>Phone Communication</strong>\"",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "alignSelf" : "flex-start",
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "import { getMyPhone } from \"./communication\";\nconst p = getMyPhone();\np !== undefined && p.phoneId > 0;",
                      "language" : "JavaScript"
                    },
                    "icon" : "phone",
                    "label" : {
                      "@class" : "Script",
                      "content" : "import { whoAmI } from \"./WegasHelper\";\n\"Create Phone for \" + whoAmI();",
                      "language" : "JavaScript"
                    },
                    "layout" : { },
                    "layoutStyle" : { },
                    "localScriptEval" : {
                      "script" : {
                        "@class" : "Script",
                        "content" : "import { emitPhoneCreationEvent } from \"./communication\";\nimport { whoAmI } from \"./WegasHelper\";\n\nemitPhoneCreationEvent(whoAmI())",
                        "language" : "typescript"
                      }
                    },
                    "name" : "Create phone",
                    "onVariableChange" : { },
                    "style" : { }
                  },
                  "type" : "Button"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "layoutStyle" : { },
                        "style" : { },
                        "text" : {
                          "@class" : "Script",
                          "content" : "\"Send to\"",
                          "language" : "JavaScript"
                        }
                      },
                      "type" : "Text"
                    }, {
                      "props" : {
                        "choices" : {
                          "@class" : "Script",
                          "content" : "import { getPhoneDropDownList } from \"./communication\";\ngetPhoneDropDownList();",
                          "language" : "typescript"
                        },
                        "layoutStyle" : { },
                        "onVariableChange" : { },
                        "script" : {
                          "@class" : "Script",
                          "content" : "Variable.find(gameModel,'recipientPhoneId')",
                          "language" : "JavaScript"
                        },
                        "style" : { }
                      },
                      "type" : "Select input"
                    } ],
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "import { userHasPhone } from \"./communication\";\n!userHasPhone();",
                      "language" : "JavaScript"
                    },
                    "layout" : {
                      "flexDirection" : "row"
                    },
                    "layoutStyle" : { },
                    "style" : { }
                  },
                  "type" : "FlexList"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "exposeAs" : "state",
                        "initialState" : {
                          "@class" : "Script",
                          "content" : "({})",
                          "language" : "TypeScript"
                        },
                        "layoutStyle" : { },
                        "localState" : false,
                        "onCancel" : { },
                        "onVariableChange" : { },
                        "placeholder" : {
                          "@class" : "Script",
                          "content" : "\"Type a message\"",
                          "language" : "JavaScript"
                        },
                        "script" : {
                          "@class" : "Script",
                          "content" : "Variable.find(gameModel,'lastPhoneMsg')",
                          "language" : "JavaScript"
                        },
                        "style" : { }
                      },
                      "type" : "String input"
                    }, {
                      "props" : {
                        "icon" : "microphone",
                        "impactVariable" : {
                          "impact" : {
                            "@class" : "Script",
                            "content" : "Variable.find(gameModel, 'lastPhoneMsg').setValue(self, {\n  \"@class\": \"TranslatableContent\",\n  \"translations\": {\n    \"EN\": {\n      \"@class\": \"Translation\",\n      \"lang\": \"EN\",\n      \"status\": \"\",\n      \"translation\": \"\"\n    }\n  },\n  \"version\": 0\n});",
                            "language" : "JavaScript"
                          },
                          "priority" : 1
                        },
                        "label" : {
                          "@class" : "Script",
                          "content" : "\"<p>Speak</p>\"",
                          "language" : "JavaScript"
                        },
                        "layoutStyle" : { },
                        "localScriptEval" : {
                          "priority" : 0,
                          "script" : {
                            "@class" : "Script",
                            "content" : "import { emitPhoneMessageEvent } from \"./communication\";\n\nconst recipient = Variable.find(gameModel, 'recipientPhoneId').getValue(self);\nconst msg = Variable.find(gameModel, 'lastPhoneMsg').getValue(self);\nemitPhoneMessageEvent(Context.phoneState.state.myPhoneId, recipient, msg);\n",
                            "language" : "typescript"
                          }
                        },
                        "name" : "Speak",
                        "onCancel" : { },
                        "onVariableChange" : { },
                        "style" : { }
                      },
                      "type" : "Button"
                    } ],
                    "className" : "",
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "import { userHasPhone } from \"./communication\";\n!userHasPhone();",
                      "language" : "JavaScript"
                    },
                    "layout" : { },
                    "layoutStyle" : { },
                    "name" : "",
                    "style" : { }
                  },
                  "type" : "FlexList"
                }, {
                  "props" : {
                    "layoutStyle" : { },
                    "name" : "title",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "\"<strong>Received messages<br /><br /></strong>from\"",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                }, {
                  "props" : {
                    "choices" : {
                      "@class" : "Script",
                      "content" : "import { getPhoneDropDownList } from \"./communication\";\ngetPhoneDropDownList();",
                      "language" : "typescript"
                    },
                    "layoutStyle" : { },
                    "onVariableChange" : { },
                    "script" : {
                      "@class" : "Script",
                      "content" : "Variable.find(gameModel,'fromPhone')",
                      "language" : "JavaScript"
                    },
                    "style" : { }
                  },
                  "type" : "Select input"
                }, {
                  "props" : {
                    "layoutStyle" : { },
                    "name" : "msg list",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "import { getPhoneMessages } from \"./communication\";\nconst selectedPhone = Variable.find(gameModel, 'fromPhone').getValue(self);\nlet v = '';\nif(selectedPhone){\n\tv = getPhoneMessages(Number.parseInt(selectedPhone)).join('<br>');\n}else {\n\tv = 'no phone selected'\n}\nv;",
                      "language" : "JavaScript"
                    }
                  },
                  "type" : "Text"
                } ],
                "layout" : {
                  "flexDirection" : "column"
                },
                "layoutStyle" : { },
                "style" : { }
              },
              "type" : "FlexList"
            }, {
              "props" : {
                "id" : "",
                "layoutStyle" : { },
                "name" : "debug state",
                "style" : { },
                "text" : {
                  "@class" : "Script",
                  "content" : "JSON.stringify(Context.phoneState.state);",
                  "language" : "JavaScript"
                }
              },
              "type" : "Text"
            } ],
            "exposeAs" : "phoneState",
            "hideIf" : {
              "@class" : "Script",
              "content" : "Variable.find(gameModel, 'communicationType').isNotSelectedValue(self, \"Phone\");",
              "language" : "JavaScript"
            },
            "initialState" : {
              "@class" : "Script",
              "content" : "import { getMyPhone } from \"./communication\";\nconst p = getMyPhone();\n({myPhoneId : (p ? p.phoneId : -1)});",
              "language" : "TypeScript"
            },
            "layoutStyle" : { },
            "localState" : true,
            "name" : "Phone",
            "style" : { }
          },
          "type" : "State"
        } ],
        "layout" : {
          "flexDirection" : "column"
        },
        "layoutStyle" : { },
        "name" : "comPanel",
        "style" : { }
      },
      "type" : "FlexList"
    } ],
    "className" : "fullSize",
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutClassName" : "fullSize",
    "layoutStyle" : {
      "overflow" : "auto"
    },
    "style" : { }
  },
  "type" : "FlexList"
}