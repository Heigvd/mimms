{
  "props" : {
    "children" : [ {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : {
              "width" : "calc(100% - 10px)"
            },
            "onCancel" : { },
            "onVariableChange" : {
              "client" : {
                "@class" : "Script",
                "content" : "import { getSelectedChannel } from \"./UIfacade/radioFacade\";\n\nconst newState = Helpers.cloneDeep(Context.interfaceState.state)\nnewState.radioMessageInput[getSelectedChannel()] = Context.text;\nContext.interfaceState.setState(newState);",
                "language" : "TypeScript"
              },
              "exposeVariableAs" : {
                "@class" : "Script",
                "content" : "\"text\"",
                "language" : "TypeScript"
              }
            },
            "placeholder" : {
              "@class" : "Script",
              "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-interface', 'type-your-message');",
              "language" : "TypeScript"
            },
            "readOnlyIf" : {
              "@class" : "Script",
              "content" : "import { canPlanAction } from \"./gameInterface/main\";\n!canPlanAction();",
              "language" : "typescript"
            },
            "rows" : 6,
            "script" : {
              "@class" : "Script",
              "content" : "import { getSelectedChannel } from \"./UIfacade/radioFacade\";\nContext.interfaceState.state.radioMessageInput[getSelectedChannel()] || '';",
              "language" : "TypeScript"
            },
            "style" : {
              "border" : "none",
              "resize" : "none",
              "width" : "100%"
            }
          },
          "type" : "String input"
        }, {
          "props" : {
            "className" : "button-S button-secondaryColor",
            "conditionnalClassNames" : [ {
              "applyOn" : "Inside",
              "className" : "disabled",
              "condition" : {
                "@class" : "Script",
                "content" : "import { getSendRadioMessageTemplate } from \"./game/common/actions/actionLogic\";\nimport { RadioType } from \"./game/common/radio/communicationType\";\nimport { canPlanAction, isPlannedAction } from \"./gameInterface/main\";\nimport { getSelectedChannel } from \"./UIfacade/radioFacade\";\nconst action = getSendRadioMessageTemplate(getSelectedChannel() as RadioType);\nif (canPlanAction()) return false;\n!isPlannedAction(action!.Uid);",
                "language" : "typescript"
              }
            }, {
              "applyOn" : "Inside",
              "className" : "abort",
              "condition" : {
                "@class" : "Script",
                "content" : "import { getSendRadioMessageTemplate } from \"./game/common/actions/actionLogic\";\nimport { RadioType } from \"./game/common/radio/communicationType\";\nimport { isPlannedAction } from \"./gameInterface/main\";\nimport { getSelectedChannel } from \"./UIfacade/radioFacade\";\nconst action = getSendRadioMessageTemplate(getSelectedChannel() as RadioType);\nisPlannedAction(action!.Uid);",
                "language" : "typescript"
              }
            } ],
            "label" : {
              "@class" : "Script",
              "content" : "import { getSendRadioMessageTemplate } from \"./game/common/actions/actionLogic\";\nimport { RadioType } from \"./game/common/radio/communicationType\";\nimport { isPlannedAction } from \"./gameInterface/main\";\nimport { getTranslation } from \"./tools/translation\";\nimport { getSelectedChannel } from \"./UIfacade/radioFacade\";\nconst action = getSendRadioMessageTemplate(getSelectedChannel() as RadioType);\nconst isPlanned = action && !!action && isPlannedAction(action.Uid)\nisPlanned ? \"Cancel\" : getTranslation(`mainSim-interface`, `send-one-minute`);",
              "language" : "TypeScript"
            },
            "layoutStyle" : {
              "align-self" : "flex-end",
              "bottom" : "5px",
              "justify-content" : "flex-end",
              "right" : "5px"
            },
            "localScriptEval" : {
              "script" : {
                "@class" : "ClientScript",
                "content" : "import { getSendRadioMessageTemplate } from \"./game/common/actions/actionLogic\";\nimport { RadioType } from \"./game/common/radio/communicationType\";\nimport { runActionButton } from \"./gameInterface/actionsButtonLogic\";\nimport { getSelectedChannel } from \"./UIfacade/radioFacade\";\n\nconst action = getSendRadioMessageTemplate(getSelectedChannel() as RadioType);\nrunActionButton(action!);",
                "language" : "TypeScript"
              }
            },
            "style" : { }
          },
          "type" : "Button"
        } ],
        "layoutStyle" : {
          "height" : "100%",
          "width" : "100%"
        },
        "onAbsoluteClick" : { },
        "style" : {
          "height" : "100%",
          "width" : "100%"
        }
      },
      "type" : "AbsoluteLayout"
    } ],
    "className" : "noPadding",
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutClassName" : "noPadding freeMessageInput-container",
    "layoutStyle" : {
      "width" : "100%"
    },
    "style" : {
      "width" : "100%"
    }
  },
  "type" : "FlexList"
}