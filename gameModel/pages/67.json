{
  "props" : {
    "children" : [ {
      "props" : {
        "children" : [ {
          "props" : {
            "className" : "mimms_h2title",
            "layoutClassName" : "noPadding",
            "layoutStyle" : { },
            "name" : "",
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-actions-tasks', 'select-resources')",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "choices" : {
                  "@class" : "Script",
                  "content" : "import { getResourceSourceLocationChoices } from \"./UIfacade/locationFacade\";\ngetResourceSourceLocationChoices();",
                  "language" : "typescript"
                },
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "import { SelectedPanel } from \"./gameInterface/selectedPanel\";\nContext.interfaceState.state.selectedPanel !== SelectedPanel.radios;",
                  "language" : "typescript"
                },
                "layoutClassName" : "noPadding resourcesDropdowns",
                "layoutStyle" : { },
                "name" : "current location",
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "import { updateCurrentLocation } from \"./UIfacade/resourceFacade\";\n\nupdateCurrentLocation(Context.resourceAllocationCurrentLocation);\n",
                    "language" : "TypeScript"
                  },
                  "exposeVariableAs" : {
                    "@class" : "Script",
                    "content" : "\"resourceAllocationCurrentLocation\"",
                    "language" : "TypeScript"
                  }
                },
                "placeholder" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', 'select-current-location')",
                  "language" : "TypeScript"
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "import { getAllocateResourcesCurrentLocation } from \"./UIfacade/resourceFacade\";\ngetAllocateResourcesCurrentLocation() ||Â '';",
                  "language" : "TypeScript"
                },
                "style" : { }
              },
              "type" : "Select input"
            }, {
              "props" : {
                "choices" : {
                  "@class" : "Script",
                  "content" : "import { getAllocateResourcesCurrentLocation } from \"./UIfacade/resourceFacade\";\nimport * as TaskFacade from \"./UIfacade/taskFacade\";\n\tTaskFacade.getResourceManagementSourceTaskChoices(Context.interfaceState.state.currentActorUid, getAllocateResourcesCurrentLocation());",
                  "language" : "typescript"
                },
                "layoutClassName" : "noPadding resourcesDropdowns",
                "layoutStyle" : { },
                "name" : "current activity",
                "noOptionsMessage" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', 'select-target-activity-empty')",
                  "language" : "TypeScript"
                },
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "import { updateResourceValues } from \"./UIfacade/resourceFacade\";\nupdateResourceValues('currentTaskId', Context.resourceAllocationCurrentTaskId);",
                    "language" : "TypeScript"
                  },
                  "exposeVariableAs" : {
                    "@class" : "Script",
                    "content" : "\"resourceAllocationCurrentTaskId\"",
                    "language" : "TypeScript"
                  }
                },
                "placeholder" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', 'select-current-activity')",
                  "language" : "TypeScript"
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "import { getStateKeyForResource } from \"./UIfacade/resourceFacade\";\nconst key = getStateKeyForResource();\nContext.interfaceState.state.resources[key].currentTaskId || '';",
                  "language" : "TypeScript"
                },
                "style" : { }
              },
              "type" : "Select input"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "className" : "noPadding noMargin",
                            "conditionnalClassNames" : [ {
                              "applyOn" : "Inside",
                              "className" : "presentResources",
                              "condition" : {
                                "@class" : "Script",
                                "content" : "import { isGodView } from \"./gameInterface/interfaceConfiguration\";\nimport { currentCountAvailableResources } from \"./UIfacade/resourceFacade\";\ncurrentCountAvailableResources() > 0 && isGodView();",
                                "language" : "typescript"
                              }
                            } ],
                            "layoutClassName" : "noPadding noMargin",
                            "layoutStyle" : { },
                            "name" : "resource type name",
                            "style" : {
                              "alignContent" : "center",
                              "fontSize" : "12px"
                            },
                            "text" : {
                              "@class" : "Script",
                              "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', '' + Context.resourceType.enum);",
                              "language" : "TypeScript"
                            }
                          },
                          "type" : "Text"
                        }, {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "className" : "noPadding noMargin resourceTypeChosenNumber",
                                "hideIf" : {
                                  "@class" : "Script",
                                  "content" : "import { isGodView } from \"./gameInterface/interfaceConfiguration\";\nimport { currentCountAvailableResources } from \"./UIfacade/resourceFacade\";\ncurrentCountAvailableResources() == 0 && isGodView();",
                                  "language" : "typescript"
                                },
                                "layoutClassName" : "noPadding noMargin",
                                "layoutStyle" : { },
                                "onCancel" : { },
                                "onVariableChange" : {
                                  "client" : {
                                    "@class" : "Script",
                                    "content" : "import { updateResourceTypesValues } from \"./UIfacade/resourceFacade\";\n\nupdateResourceTypesValues();",
                                    "language" : "TypeScript"
                                  },
                                  "exposeVariableAs" : {
                                    "@class" : "Script",
                                    "content" : "\"resourceAllocationNbForType\"",
                                    "language" : "TypeScript"
                                  }
                                },
                                "placeholder" : {
                                  "@class" : "Script",
                                  "content" : "\"0\"",
                                  "language" : "TypeScript"
                                },
                                "script" : {
                                  "@class" : "Script",
                                  "content" : "import { getStateKeyForResource } from \"./UIfacade/resourceFacade\";\n  const key = getStateKeyForResource();\nContext.interfaceState.state.resources[key][Context.resourceType.enum] || '';",
                                  "language" : "TypeScript"
                                },
                                "style" : { }
                              },
                              "type" : "Number input"
                            }, {
                              "props" : {
                                "className" : "",
                                "conditionnalClassNames" : [ {
                                  "applyOn" : "Outside",
                                  "className" : "presentResources",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "import { isGodView } from \"./gameInterface/interfaceConfiguration\";\nimport { currentCountAvailableResources } from \"./UIfacade/resourceFacade\";\ncurrentCountAvailableResources() > 0 && isGodView();",
                                    "language" : "typescript"
                                  }
                                } ],
                                "hideIf" : {
                                  "@class" : "Script",
                                  "content" : "import { isGodView } from \"./gameInterface/interfaceConfiguration\";\n!isGodView();",
                                  "language" : "typescript"
                                },
                                "layoutClassName" : "noPadding selectableRessources ",
                                "layoutStyle" : { },
                                "name" : "availableResourcesByType",
                                "style" : {
                                  "alignItems" : "center",
                                  "fontSize" : "12px"
                                },
                                "text" : {
                                  "@class" : "Script",
                                  "content" : "import { currentCountAvailableResources } from \"./UIfacade/resourceFacade\";\n  const resource = currentCountAvailableResources();\n  if (resource > 0) {\n    return '/ ' + currentCountAvailableResources();\n  }\n'0';",
                                  "language" : "TypeScript"
                                }
                              },
                              "type" : "Text"
                            } ],
                            "className" : "noPadding noMargin",
                            "layout" : {
                              "alignItems" : "center"
                            },
                            "layoutClassName" : "noPadding noMargin",
                            "layoutStyle" : { },
                            "name" : "numbers",
                            "style" : {
                              "gap" : "5px"
                            }
                          },
                          "type" : "FlexList"
                        } ],
                        "className" : "",
                        "layout" : {
                          "alignContent" : "center",
                          "justifyContent" : "space-between"
                        },
                        "layoutClassName" : "evenOddList-container",
                        "layoutStyle" : {
                          "height" : "30px"
                        },
                        "name" : "resources",
                        "style" : { }
                      },
                      "type" : "FlexList"
                    } ],
                    "className" : "",
                    "exposeAs" : "resourceType",
                    "getItemsFn" : {
                      "@class" : "Script",
                      "content" : "import { getHumanResourceTypes } from \"./UIfacade/resourceFacade\";\ngetHumanResourceTypes().map(type => {return {enum: type}});",
                      "language" : "TypeScript"
                    },
                    "itemKey" : "enum",
                    "layout" : {
                      "flexDirection" : "column"
                    },
                    "layoutClassName" : "noPadding",
                    "layoutStyle" : {
                      "marginTop" : "0px"
                    },
                    "style" : { }
                  },
                  "type" : "For each"
                } ],
                "className" : "",
                "layout" : {
                  "alignContent" : "center",
                  "flexDirection" : "column"
                },
                "layoutClassName" : "noPadding",
                "layoutStyle" : { },
                "name" : "resources type",
                "style" : { }
              },
              "type" : "FlexList"
            } ],
            "className" : "resourcesSelectionAssignment",
            "layout" : {
              "flexDirection" : "column"
            },
            "layoutClassName" : "noPadding resourcesSelectionAssignment-container",
            "layoutStyle" : { },
            "name" : "select",
            "style" : { }
          },
          "type" : "FlexList"
        }, {
          "props" : {
            "className" : "mimms_h2title",
            "layoutClassName" : "noPadding",
            "layoutStyle" : { },
            "name" : "",
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-actions-tasks', 'assign-task-to-selected-resources')",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "choices" : {
                  "@class" : "Script",
                  "content" : "import { getResourceTargetLocationChoices } from \"./UIfacade/locationFacade\";\ngetResourceTargetLocationChoices(Context.interfaceState.state.currentActorUid);",
                  "language" : "typescript"
                },
                "layoutClassName" : "noPadding resourcesDropdowns",
                "layoutStyle" : { },
                "name" : "target location",
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "import { updateTargetDestination } from \"./UIfacade/resourceFacade\";\n\nupdateTargetDestination(Context.resourceAllocationTargetLocation);",
                    "language" : "TypeScript"
                  },
                  "exposeVariableAs" : {
                    "@class" : "Script",
                    "content" : "\"resourceAllocationTargetLocation\"",
                    "language" : "TypeScript"
                  }
                },
                "placeholder" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', 'select-target-location')",
                  "language" : "TypeScript"
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "import { getStateKeyForResource } from \"./UIfacade/resourceFacade\";\nconst key = getStateKeyForResource();\nContext.interfaceState.state.resources[key].targetLocation || '';",
                  "language" : "TypeScript"
                },
                "style" : { }
              },
              "type" : "Select input"
            }, {
              "props" : {
                "choices" : {
                  "@class" : "Script",
                  "content" : "import { getStateKeyForResource } from \"./UIfacade/resourceFacade\";\nimport { getResourceManagementTargetTaskChoices } from \"./UIfacade/taskFacade\";\n  const key = getStateKeyForResource();\ngetResourceManagementTargetTaskChoices(Context.interfaceState.state.currentActorUid, Context.interfaceState.state.resources[key].targetLocation);",
                  "language" : "typescript"
                },
                "layoutClassName" : "noPadding resourcesDropdowns",
                "layoutStyle" : { },
                "name" : "target activity",
                "noOptionsMessage" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', 'select-target-activity-empty')",
                  "language" : "TypeScript"
                },
                "onVariableChange" : {
                  "client" : {
                    "@class" : "Script",
                    "content" : "import { updateResourceValues } from \"./UIfacade/resourceFacade\";\nupdateResourceValues('targetTaskId', Context.resourceAllocationTargetTaskId);",
                    "language" : "TypeScript"
                  },
                  "exposeVariableAs" : {
                    "@class" : "Script",
                    "content" : "\"resourceAllocationTargetTaskId\"",
                    "language" : "TypeScript"
                  }
                },
                "placeholder" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', 'select-target-activity')",
                  "language" : "TypeScript"
                },
                "script" : {
                  "@class" : "Script",
                  "content" : "import { getStateKeyForResource } from \"./UIfacade/resourceFacade\";\nconst key = getStateKeyForResource();\nContext.interfaceState.state.resources[key].targetTaskId || '';",
                  "language" : "TypeScript"
                },
                "style" : { }
              },
              "type" : "Select input"
            } ],
            "className" : "resourcesSelectionAssignment",
            "layout" : {
              "flexDirection" : "column"
            },
            "layoutClassName" : "noPadding resourcesSelectionAssignment-container",
            "layoutStyle" : { },
            "name" : "choose assignment",
            "style" : { }
          },
          "type" : "FlexList"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "className" : "button-S button-secondaryColor",
                "conditionnalClassNames" : [ {
                  "applyOn" : "Inside",
                  "className" : "abort",
                  "condition" : {
                    "@class" : "Script",
                    "content" : "import { isOrderValidationDisabled } from \"./UIfacade/resourceFacade\";\n  isOrderValidationDisabled();",
                    "language" : "typescript"
                  }
                } ],
                "disableIf" : {
                  "@class" : "Script",
                  "content" : "import { isOrderValidationDisabled } from \"./UIfacade/resourceFacade\";\n  isOrderValidationDisabled();",
                  "language" : "typescript"
                },
                "hideIf" : {
                  "@class" : "Script",
                  "content" : "import { canPlanOrCancel, uniqueActionTemplates } from \"./UIfacade/actionFacade\";\n!canPlanOrCancel(uniqueActionTemplates()?.MoveResourcesAssignTaskActionTemplate);",
                  "language" : "typescript"
                },
                "label" : {
                  "@class" : "Script",
                  "content" : "import { canPlanAction } from \"./gameInterface/main\";\nimport { getTranslation } from \"./tools/translation\";\ncanPlanAction() ? getTranslation('mainSim-interface', 'send') : getTranslation('mainSim-interface', 'cancel');",
                  "language" : "TypeScript"
                },
                "layoutClassName" : "",
                "layoutStyle" : {
                  "padding" : "10px 0 5px 0"
                },
                "localScriptEval" : {
                  "script" : {
                    "@class" : "ClientScript",
                    "content" : "import { runActionButton } from \"./gameInterface/actionsButtonLogic\";\nimport { uniqueActionTemplates } from \"./UIfacade/actionFacade\";\nrunActionButton(uniqueActionTemplates()?.MoveResourcesAssignTaskActionTemplate);",
                    "language" : "TypeScript"
                  }
                },
                "style" : { }
              },
              "type" : "Button"
            } ],
            "className" : "",
            "layout" : {
              "justifyContent" : "flex-end"
            },
            "layoutClassName" : "noPadding",
            "layoutStyle" : { },
            "name" : "button",
            "style" : { }
          },
          "type" : "FlexList"
        } ],
        "className" : "noPadding resourcesManagement",
        "disableIf" : {
          "@class" : "Script",
          "content" : "import { canPlanAction } from \"./gameInterface/main\";\nif (canPlanAction()) {\n    return false;\n  }\ntrue;",
          "language" : "typescript"
        },
        "layout" : {
          "flexDirection" : "column"
        },
        "layoutClassName" : "noPadding resourcesManagement-container",
        "layoutStyle" : { },
        "name" : "assignTasksInputs",
        "style" : { }
      },
      "type" : "FlexList"
    } ],
    "className" : "noPadding noMargin",
    "conditionnalClassNames" : [ {
      "applyOn" : "Inside",
      "className" : "unauthorizedAction",
      "condition" : {
        "@class" : "Script",
        "content" : "import { canPlanOrCancel, uniqueActionTemplates } from \"./UIfacade/actionFacade\";\n!canPlanOrCancel(uniqueActionTemplates()?.MoveResourcesAssignTaskActionTemplate);",
        "language" : "typescript"
      }
    } ],
    "disableIf" : {
      "@class" : "Script",
      "content" : "import { canPlanOrCancel, uniqueActionTemplates } from \"./UIfacade/actionFacade\";\n!canPlanOrCancel(uniqueActionTemplates()?.MoveResourcesAssignTaskActionTemplate);",
      "language" : "typescript"
    },
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutClassName" : "noPadding noMargin",
    "layoutStyle" : {
      "width" : "100%"
    },
    "name" : "resources",
    "style" : {
      "overflow" : "auto"
    }
  },
  "type" : "FlexList"
}