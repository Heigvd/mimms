{
  "props" : {
    "children" : [ {
      "props" : {
        "className" : "mimms_h3title",
        "layoutClassName" : "noPadding aDescriptionAction",
        "layoutStyle" : { },
        "name" : "description",
        "style" : { },
        "text" : {
          "@class" : "Script",
          "content" : "import { UniqueAction } from \"./game/common/actionType\";\nimport { getActionTemplate } from \"./UIfacade/actionFacade\";\n  const action = getActionTemplate(UniqueAction.ActivateRadioSchemaActionTemplate);\naction?.getDescription();",
          "language" : "TypeScript"
        }
      },
      "type" : "Text"
    }, {
      "props" : {
        "className" : "button-secondaryColor button-S",
        "conditionnalClassNames" : [ {
          "applyOn" : "Inside",
          "className" : "abort",
          "condition" : {
            "@class" : "Script",
            "content" : "import { UniqueAction } from \"./game/common/actionType\";\nimport { isPlannedAction } from \"./gameInterface/main\";\nimport { getActionTemplate } from \"./UIfacade/actionFacade\";\nconst action = getActionTemplate(UniqueAction.ActivateRadioSchemaActionTemplate)!;\n!!action && isPlannedAction(action.Uid);",
            "language" : "typescript"
          }
        } ],
        "disableIf" : {
          "@class" : "Script",
          "content" : "import { UniqueAction } from \"./game/common/actionType\";\nimport { canPlanAction, isPlannedAction } from \"./gameInterface/main\";\nimport { getActionTemplate } from \"./UIfacade/actionFacade\";\nconst action = getActionTemplate(UniqueAction.ActivateRadioSchemaActionTemplate);\nif (!action) return true;\nif (canPlanAction()) return false;\n!isPlannedAction(action.Uid);",
          "language" : "typescript"
        },
        "hideIf" : {
          "@class" : "Script",
          "content" : "import { UniqueAction } from \"./game/common/actionType\";\nimport { getActionTemplate } from \"./UIfacade/actionFacade\";\n!getActionTemplate(UniqueAction.ActivateRadioSchemaActionTemplate);",
          "language" : "typescript"
        },
        "label" : {
          "@class" : "Script",
          "content" : "import { UniqueAction } from \"./game/common/actionType\";\nimport { isPlannedAction } from \"./gameInterface/main\";\nimport { getTranslation } from \"./tools/translation\";\nimport { getActionTemplate } from \"./UIfacade/actionFacade\";\nconst action = getActionTemplate(UniqueAction.ActivateRadioSchemaActionTemplate);\n  if (!action) {\n    return undefined;\n  }\nconst isPlanned = isPlannedAction(action.Uid)\nisPlanned ? getTranslation('mainSim-interface', 'cancel') : getTranslation(`mainSim-interface`, `send-one-minute`);",
          "language" : "TypeScript"
        },
        "layoutStyle" : {
          "alignSelf" : "flex-end",
          "padding" : "15px 0px 10px 0px"
        },
        "localScriptEval" : {
          "script" : {
            "@class" : "ClientScript",
            "content" : "import { UniqueAction } from \"./game/common/actionType\";\nimport { runActionButton } from \"./gameInterface/actionsButtonLogic\";\nimport { getActionTemplate } from \"./UIfacade/actionFacade\";\n\nconst action = getActionTemplate(UniqueAction.ActivateRadioSchemaActionTemplate);\nrunActionButton(action);",
            "language" : "TypeScript"
          }
        },
        "name" : "send",
        "style" : { }
      },
      "type" : "Button"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "overflow" : "auto",
      "width" : "100%"
    }
  },
  "type" : "FlexList"
}