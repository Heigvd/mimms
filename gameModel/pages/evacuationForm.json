{
  "props" : {
    "children" : [ {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : { },
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "\"<p>patient<br></p>\"",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "choices" : {
              "@class" : "Script",
              "content" : "import { getPatientsAvailableForEvacuation } from \"./UIfacade/patientFacade\";\ngetPatientsAvailableForEvacuation();",
              "language" : "typescript"
            },
            "className" : "",
            "layoutClassName" : "evacuationInputField",
            "layoutStyle" : { },
            "onCancel" : { },
            "onVariableChange" : {
              "client" : {
                "@class" : "Script",
                "content" : "const newState = Helpers.cloneDeep(Context.interfaceState.state)\nnewState.evacuation.patientId = Context.evacuationPatientId;\nContext.interfaceState.setState(newState);",
                "language" : "TypeScript"
              },
              "exposeVariableAs" : {
                "@class" : "Script",
                "content" : "\"evacuationPatientId\"",
                "language" : "TypeScript"
              }
            },
            "script" : {
              "@class" : "Script",
              "content" : "Context.interfaceState.state.evacuation.patientId || '';",
              "language" : "TypeScript"
            },
            "style" : { }
          },
          "type" : "Select input"
        } ],
        "className" : "evacuationInputItem",
        "layout" : { },
        "layoutStyle" : { },
        "name" : "patient",
        "style" : { }
      },
      "type" : "FlexList"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : { },
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "\"<p>hospital<br></p>\"",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "choices" : {
              "@class" : "Script",
              "content" : "import { getEvacHospitalsChoices } from \"./UIfacade/evacuationFacade\";\ngetEvacHospitalsChoices();",
              "language" : "typescript"
            },
            "layoutClassName" : "evacuationInputField",
            "layoutStyle" : { },
            "onVariableChange" : {
              "client" : {
                "@class" : "Script",
                "content" : "const newState = Helpers.cloneDeep(Context.interfaceState.state)\nnewState.evacuation.hospitalId = Context.evacuationHospitalId;\nContext.interfaceState.setState(newState);",
                "language" : "TypeScript"
              },
              "exposeVariableAs" : {
                "@class" : "Script",
                "content" : "\"evacuationHospitalId\"",
                "language" : "TypeScript"
              }
            },
            "script" : {
              "@class" : "Script",
              "content" : "Context.interfaceState.state.evacuation.hospitalId || '';",
              "language" : "TypeScript"
            },
            "style" : { }
          },
          "type" : "Select input"
        } ],
        "className" : "evacuationInputItem",
        "layout" : { },
        "layoutStyle" : { },
        "name" : "hospital",
        "style" : { }
      },
      "type" : "FlexList"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : { },
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "\"<p>patient unit<br></p>\"",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "choices" : {
              "@class" : "Script",
              "content" : "import { getPatientUnitAtHospitalChoices } from \"./UIfacade/evacuationFacade\";\ngetPatientUnitAtHospitalChoices(Context.interfaceState.state.evacuation.hospitalId);",
              "language" : "typescript"
            },
            "layoutClassName" : "evacuationInputField",
            "layoutStyle" : { },
            "onVariableChange" : {
              "client" : {
                "@class" : "Script",
                "content" : "const newState = Helpers.cloneDeep(Context.interfaceState.state)\nnewState.evacuation.patientUnitAtHospital = Context.patientUnitAtHospital;\nContext.interfaceState.setState(newState);",
                "language" : "TypeScript"
              },
              "exposeVariableAs" : {
                "@class" : "Script",
                "content" : "\"patientUnitAtHospital\"",
                "language" : "TypeScript"
              }
            },
            "script" : {
              "@class" : "Script",
              "content" : "Context.interfaceState.state.evacuation.patientUnitAtHospital || '';",
              "language" : "TypeScript"
            },
            "style" : { }
          },
          "type" : "Select input"
        } ],
        "className" : "evacuationInputItem",
        "layout" : { },
        "layoutStyle" : { },
        "name" : "patientUnitAtHospital",
        "style" : { }
      },
      "type" : "FlexList"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : { },
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "\"<p>transport<br></p>\"",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "choices" : {
              "@class" : "Script",
              "content" : "import { getEvacSquadDefinitions } from \"./UIfacade/evacuationFacade\";\ngetEvacSquadDefinitions();",
              "language" : "typescript"
            },
            "layoutClassName" : "evacuationInputField",
            "layoutStyle" : { },
            "onVariableChange" : {
              "client" : {
                "@class" : "Script",
                "content" : "const newState = Helpers.cloneDeep(Context.interfaceState.state)\nnewState.evacuation.transportSquad = Context.transportSquad;\nContext.interfaceState.setState(newState);",
                "language" : "TypeScript"
              },
              "exposeVariableAs" : {
                "@class" : "Script",
                "content" : "\"transportSquad\"",
                "language" : "TypeScript"
              }
            },
            "script" : {
              "@class" : "Script",
              "content" : "Context.interfaceState.state.evacuation.transportSquad || '';",
              "language" : "TypeScript"
            },
            "style" : { }
          },
          "type" : "Select input"
        } ],
        "className" : "evacuationInputItem",
        "layout" : { },
        "layoutClassName" : "",
        "layoutStyle" : { },
        "name" : "transport",
        "style" : { }
      },
      "type" : "FlexList"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : { },
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "\"<p>Est-ce que les ressources doivent revenir ?<br></p>\"",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "layoutClassName" : "",
            "layoutStyle" : { },
            "onVariableChange" : {
              "client" : {
                "@class" : "Script",
                "content" : "const newState = Helpers.cloneDeep(Context.interfaceState.state)\nnewState.evacuation.doResourcesComeBack = Context.doResourcesComeBack;\nContext.interfaceState.setState(newState);\n",
                "language" : "TypeScript"
              },
              "exposeVariableAs" : {
                "@class" : "Script",
                "content" : "\"doResourcesComeBack\"",
                "language" : "TypeScript"
              }
            },
            "script" : {
              "@class" : "Script",
              "content" : "Context.interfaceState.state.evacuation.doResourcesComeBack;",
              "language" : "TypeScript"
            },
            "style" : { },
            "type" : "checkbox"
          },
          "type" : "Boolean"
        } ],
        "className" : "evacuationInputItem",
        "layout" : { },
        "layoutClassName" : "",
        "layoutStyle" : { },
        "name" : "do come back",
        "style" : { }
      },
      "type" : "FlexList"
    }, {
      "props" : {
        "children" : [ {
          "props" : {
            "className" : "pink l_button",
            "conditionnalClassNames" : [ {
              "applyOn" : "Inside",
              "className" : "abort",
              "condition" : {
                "@class" : "Script",
                "content" : "import { ActionType } from \"./game/common/actionType\";\nimport { isPlannedAction } from \"./gameInterface/main\";\nimport { getAvailableActions } from \"./UIfacade/actionFacade\";\nconst actions =  getAvailableActions(Context.interfaceState.state.currentActorUid, ActionType.EVASAN_RADIO);\nactions.length > 0 && isPlannedAction(actions[0].Uid);",
                "language" : "typescript"
              }
            } ],
            "disableIf" : {
              "@class" : "Script",
              "content" : "import { ActionType } from \"./game/common/actionType\";\nimport { canPlanAction } from \"./gameInterface/main\";\nimport { getAvailableActions } from \"./UIfacade/actionFacade\";\nif (!canPlanAction()) {\n\treturn false;\n}\n  const availableAction = getAvailableActions(Context.interfaceState.state.currentActorUid, ActionType.EVASAN_RADIO)[0];\n  if (availableAction == null) {\n    return true;\n  }\n//const params = Context.interfaceState.state.evacuation;\n//return Object.values(params).includes(undefined);\n  false;",
              "language" : "typescript"
            },
            "hideIf" : {
              "@class" : "Script",
              "content" : "import { ActionType } from \"./game/common/actionType\";\nimport { canPlanAction, isPlannedAction } from \"./gameInterface/main\";\nimport { getAvailableActions } from \"./UIfacade/actionFacade\";\nif (canPlanAction()) return false;\n!isPlannedAction( getAvailableActions(Context.interfaceState.state.currentActorUid, ActionType.EVASAN_RADIO)[0].Uid);",
              "language" : "typescript"
            },
            "label" : {
              "@class" : "Script",
              "content" : "import { canPlanAction } from \"./gameInterface/main\";\nimport { getTranslation } from \"./tools/translation\";\ncanPlanAction() ? getTranslation('mainSim-interface', 'send') : getTranslation('mainSim-interface', 'cancel');",
              "language" : "TypeScript"
            },
            "layoutClassName" : "",
            "layoutStyle" : { },
            "localScriptEval" : {
              "script" : {
                "@class" : "ClientScript",
                "content" : "import { ActionType } from \"./game/common/actionType\";\nimport { runActionButton } from \"./gameInterface/actionsButtonLogic\";\nimport { getAvailableActions } from \"./UIfacade/actionFacade\";\nconst actions =  getAvailableActions(Context.interfaceState.state.currentActorUid, ActionType.EVASAN_RADIO);\nrunActionButton(actions[0]);",
                "language" : "TypeScript"
              }
            },
            "style" : { }
          },
          "type" : "Button"
        } ],
        "className" : "",
        "layout" : {
          "justifyContent" : "flex-end"
        },
        "layoutStyle" : { },
        "name" : "button",
        "style" : { }
      },
      "type" : "FlexList"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "overflow" : "auto",
      "width" : "100%"
    }
  },
  "type" : "FlexList"
}