{
  "props" : {
    "children" : [ {
      "props" : {
        "choices" : {
          "@class" : "Script",
          "content" : "import { getLetterRepresentationOfIndex } from \"./tools/helper\";\n  const choices: { label: string, value: string }[] = [];\n\n  const uids = Context.action.choices;\n\n  if (uids) {\n    uids.forEach((u: string, i: number) => {\n      choices.push({ label: getLetterRepresentationOfIndex(i), value: u })\n    })\n  }\n  choices;",
          "language" : "typescript"
        },
        "layoutStyle" : {
          "padding" : "10px 5px 0 0"
        },
        "onVariableChange" : {
          "client" : {
            "@class" : "Script",
            "content" : "import { activableSelectionRef } from \"./gameMap/layers/activablesLayer\";\n\nconst newState = Helpers.cloneDeep(Context.interfaceState.state)\nnewState.selectedActionChoice = Context.actionChoice;\nContext.interfaceState.setState(newState);\nactivableSelectionRef.current.changed();",
            "language" : "TypeScript"
          },
          "exposeVariableAs" : {
            "@class" : "Script",
            "content" : "\"actionChoice\"",
            "language" : "TypeScript"
          }
        },
        "script" : {
          "@class" : "Script",
          "content" : "Context.interfaceState.state.selectedActionChoice;",
          "language" : "TypeScript"
        },
        "style" : { }
      },
      "type" : "Select input"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "overflow" : "auto",
      "width" : "100%"
    }
  },
  "type" : "FlexList"
}