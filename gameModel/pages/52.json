{
  "props" : {
    "children" : [ {
      "props" : {
        "children" : [ {
          "props" : {
            "children" : [ {
              "props" : {
                "children" : [ {
                  "props" : {
                    "className" : "resourceIcon",
                    "conditionnalClassNames" : [ {
                      "applyOn" : "Inside",
                      "className" : "greyRessources",
                      "condition" : {
                        "@class" : "Script",
                        "content" : "import { countAvailableResources } from \"./UIfacade/resourceTaskFacade\";\n\tcountAvailableResources(Context.interfaceState.state.currentActorUid, Context.resourceType.enum) === 0;",
                        "language" : "typescript"
                      }
                    } ],
                    "icon" : "user-nurse",
                    "layoutClassName" : "resourceIcon-container headerResourceIcon-container",
                    "layoutStyle" : { },
                    "name" : "resource icon",
                    "style" : { }
                  },
                  "type" : "Icon"
                }, {
                  "props" : {
                    "className" : "resourceCounter",
                    "conditionnalClassNames" : [ {
                      "applyOn" : "Inside",
                      "className" : "greyRessources",
                      "condition" : {
                        "@class" : "Script",
                        "content" : "import { countAvailableResources } from \"./UIfacade/resourceTaskFacade\";\n\tcountAvailableResources(Context.interfaceState.state.currentActorUid, Context.resourceType.enum) === 0;",
                        "language" : "typescript"
                      }
                    } ],
                    "layoutClassName" : "resourceCounter-container noPadding",
                    "layoutStyle" : { },
                    "name" : "nb available",
                    "style" : { },
                    "text" : {
                      "@class" : "Script",
                      "content" : "import { countAvailableResources } from \"./UIfacade/resourceTaskFacade\";\n\"\" + countAvailableResources(Context.interfaceState.state.currentActorUid, Context.resourceType.enum);",
                      "language" : "TypeScript"
                    }
                  },
                  "type" : "Text"
                } ],
                "conditionnalClassNames" : [ {
                  "applyOn" : "Inside",
                  "className" : "greyRessources",
                  "condition" : {
                    "@class" : "Script",
                    "content" : "import { countAvailableResources } from \"./UIfacade/resourceTaskFacade\";\n\tcountAvailableResources(Context.interfaceState.state.currentActorUid, Context.resourceType.enum) === 0;",
                    "language" : "typescript"
                  }
                } ],
                "layout" : { },
                "layoutStyle" : { },
                "name" : "icon with nb",
                "style" : { }
              },
              "type" : "FlexList"
            }, {
              "props" : {
                "layoutClassName" : "resourceTypeName-container",
                "layoutStyle" : { },
                "name" : "resource type name",
                "style" : { },
                "text" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-resources', Context.resourceType.enum);",
                  "language" : "TypeScript"
                }
              },
              "type" : "Text"
            } ],
            "className" : "oneHeaderResource",
            "conditionnalClassNames" : [ {
              "applyOn" : "Inside",
              "className" : "greyRessources",
              "condition" : {
                "@class" : "Script",
                "content" : "import { countAvailableResources } from \"./UIfacade/resourceTaskFacade\";\ncountAvailableResources(Context.interfaceState.state.currentActorUid, Context.resourceType.enum) === 0;",
                "language" : "typescript"
              }
            } ],
            "layout" : {
              "alignItems" : "center",
              "flexDirection" : "column"
            },
            "layoutStyle" : { },
            "name" : "one resource",
            "style" : { }
          },
          "type" : "FlexList"
        } ],
        "className" : "",
        "exposeAs" : "resourceType",
        "getItemsFn" : {
          "@class" : "Script",
          "content" : "import { getHumanResourceTypes } from \"./UIfacade/resourceTaskFacade\";\ngetHumanResourceTypes().map(type => {return {enum: type}});",
          "language" : "TypeScript"
        },
        "itemKey" : "enum",
        "layout" : { },
        "layoutStyle" : { },
        "style" : { }
      },
      "type" : "For each"
    } ],
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutClassName" : "resourcesPanel-container",
    "layoutStyle" : {
      "display" : "hidden"
    },
    "name" : "available resources",
    "style" : { }
  },
  "type" : "FlexList"
}